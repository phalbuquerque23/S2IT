<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" media="screen" href="/~d/styles/atom10full.xsl"?><?xml-stylesheet type="text/css" media="screen" href="http://feeds.feedburner.com/~d/styles/itemcontent.css"?><feed xmlns="http://www.w3.org/2005/Atom" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:feedburner="http://rssnamespace.org/feedburner/ext/1.0"><title>JBoss Tools Aggregated Feed</title><link rel="alternate" href="http://tools.jboss.org" /><subtitle>JBoss Tools Aggregated Feed</subtitle><dc:creator>JBoss Tools</dc:creator><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="self" type="application/atom+xml" href="http://feeds.feedburner.com/jbossbuzz" /><feedburner:info uri="jbossbuzz" /><atom10:link xmlns:atom10="http://www.w3.org/2005/Atom" rel="hub" href="http://pubsubhubbub.appspot.com/" /><entry><title>Contract-First API Design with Apicurio and Red Hat Fuse/Camel</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/C5nm9tnzf08/" /><category term="Agile Integration" scheme="searchisko:content:tags" /><category term="apache camel" scheme="searchisko:content:tags" /><category term="API" scheme="searchisko:content:tags" /><category term="Apicurio" scheme="searchisko:content:tags" /><category term="Camel" scheme="searchisko:content:tags" /><category term="contract first design" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="JBoss Fuse" scheme="searchisko:content:tags" /><category term="microservices" scheme="searchisko:content:tags" /><category term="Modern App Dev" scheme="searchisko:content:tags" /><category term="OpenAPI" scheme="searchisko:content:tags" /><category term="Red Hat Fuse" scheme="searchisko:content:tags" /><category term="Red Hat OpenShift Container Platform" scheme="searchisko:content:tags" /><author><name>Christina Lin</name></author><id>searchisko:content:id:jbossorg_blog-contract_first_api_design_with_apicurio_and_red_hat_fuse_camel</id><updated>2018-07-12T16:00:52Z</updated><published>2018-07-12T16:00:52Z</published><content type="html">&lt;p&gt;This is part one of my two-article series that demonstrates how to implement contract-first API design using &lt;a href="https://www.apicur.io/"&gt;Apicurio&lt;/a&gt; and &lt;a href="https://www.redhat.com/en/technologies/jboss-middleware/fuse"&gt;Red Hat Fuse&lt;/a&gt;.  It covers how to create an OpenAPI standard document as the contract between API providers and consumers using Apicurio Studio. It also shows how to quickly create mock tests using &lt;a href="https://developers.redhat.com/products/fuse/overview/"&gt;Red Hat Fuse&lt;/a&gt; which is based on Camel.&lt;/p&gt; &lt;p&gt;There are two common approaches when it comes to creating APIs:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Code first (top-down)&lt;/li&gt; &lt;li&gt;Contract first (bottom-up)&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;span id="more-505057"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;Code-First Approach&lt;/h2&gt; &lt;p&gt;To ESB developers, these two approaches aren&amp;#8217;t new. Before, it was the WSDL that defined the contract of the service. We were doing a lot more coding first, because it&amp;#8217;s easy to write a couple of Java classes and generate the WSDL for the consumers. This is the &lt;em&gt;code-first&lt;/em&gt; approach, which has been the most common in the past.&lt;/p&gt; &lt;div class="separator"&gt;&lt;a href="https://4.bp.blogspot.com/-xn1vGjSAAnE/WzqGGNtRwcI/AAAAAAAAFkw/5QNFPyU4AJ4-8S8X8xjwHLL4aEjfA_B3QCLcBGAs/s1600/Screen%2BShot%2B2018-07-03%2Bat%2B4.07.01%2BAM.png"&gt;&lt;img class="aligncenter" src="https://4.bp.blogspot.com/-xn1vGjSAAnE/WzqGGNtRwcI/AAAAAAAAFkw/5QNFPyU4AJ4-8S8X8xjwHLL4aEjfA_B3QCLcBGAs/s400/Screen%2BShot%2B2018-07-03%2Bat%2B4.07.01%2BAM.png" width="400" height="270" border="0" /&gt;&lt;/a&gt;&lt;/div&gt; &lt;p&gt;Code-first development can be pretty straightforward if the consumer of your application has decided how they want the service to work. There is always a preliminary discussion between the developer and consumer about the data to be exchanged. It is likely that there is some notion of the &amp;#8220;contract&amp;#8221; for the service, but often it is implicit. With this approach small changes are inevitable, and it takes a toll on the developer to grind through the long process of making all these updates and getting everything right. Since the contract isn&amp;#8217;t explicitly spelled out, these changes might actually break things because the developer and the consumer each have different understanding of the service&amp;#8217;s intended operation.&lt;/p&gt; &lt;p&gt;.&lt;/p&gt; &lt;h2&gt;Contract-First Approach&lt;/h2&gt; &lt;p&gt;Business users and citizen users/developers can use the new OpenAPI specification to negotiate and perhaps perform a couple of pre-tests with the consumer before the design gets handed over to the developer. This design approach is called &lt;em&gt;contract first&lt;/em&gt;. It has become more and more popular because it prevents the developer from wasting time while negotiating how the service should be provided.&lt;/p&gt; &lt;div class="separator"&gt;&lt;a href="https://1.bp.blogspot.com/-yveltlUuzW4/WzqLuvxMhrI/AAAAAAAAFk8/SbjUNBZ3udIGlMkTSlITPhSqKUT3N6AHgCLcBGAs/s1600/Screen%2BShot%2B2018-07-03%2Bat%2B4.31.35%2BAM.png"&gt;&lt;img class="aligncenter" src="https://1.bp.blogspot.com/-yveltlUuzW4/WzqLuvxMhrI/AAAAAAAAFk8/SbjUNBZ3udIGlMkTSlITPhSqKUT3N6AHgCLcBGAs/s400/Screen%2BShot%2B2018-07-03%2Bat%2B4.31.35%2BAM.png" width="400" height="222" border="0" /&gt;&lt;/a&gt;&lt;/div&gt; &lt;p&gt;Obviously, there are many ways to implement a contract-first API. I am going to demonstrate how it can be done using Apicurio and Red Hat Fuse. I will be using Apicurio to define APIs and automatically generate the Red Hat Fuse project for the purpose of quick testing.&lt;/p&gt; &lt;h2&gt;Creating a Customer Service API&lt;/h2&gt; &lt;p&gt;In this example demo, we will be providing customer info to our consumer as a service. For the sake of this demo, we will start by retrieving and creating a customer service.&lt;/p&gt; &lt;div class="separator"&gt;&lt;a href="http://1.bp.blogspot.com/-XTDagvBT42k/Wztx7K9XbJI/AAAAAAAAFlM/JqqlHpz7vXA2rKSZZz5eOckSRnVq7NnWACK4BGAYYCw/s1600/Screen%2BShot%2B2018-07-03%2Bat%2B8.03.27%2BAM.png"&gt;&lt;img src="https://1.bp.blogspot.com/-XTDagvBT42k/Wztx7K9XbJI/AAAAAAAAFlM/JqqlHpz7vXA2rKSZZz5eOckSRnVq7NnWACK4BGAYYCw/s400/Screen%2BShot%2B2018-07-03%2Bat%2B8.03.27%2BAM.png" width="400" height="196" border="0" /&gt;&lt;/a&gt;&lt;/div&gt; &lt;p&gt;&amp;#160;&lt;/p&gt; &lt;h3&gt;Defining the Application with the OpenAPI Specification in Apicurio&lt;/h3&gt; &lt;p&gt;Apicurio is a web-based open source tool for designing APIs that are based on the OpenAPI specification.&lt;/p&gt; &lt;p&gt;If you don&amp;#8217;t already have an Apicurio account, you need to first register for one.&lt;/p&gt; &lt;div class="separator"&gt;&lt;a href="http://1.bp.blogspot.com/-ChQnfK46nzg/WztygyxYt2I/AAAAAAAAFlY/HU51E1gVIqoI1M2OhSgj30wRDV4SsU0BACK4BGAYYCw/s1600/Screen%2BShot%2B2018-07-03%2Bat%2B8.03.42%2BAM.png"&gt;&lt;img src="https://1.bp.blogspot.com/-ChQnfK46nzg/WztygyxYt2I/AAAAAAAAFlY/HU51E1gVIqoI1M2OhSgj30wRDV4SsU0BACK4BGAYYCw/s640/Screen%2BShot%2B2018-07-03%2Bat%2B8.03.42%2BAM.png" width="640" height="192" border="0" /&gt;&lt;/a&gt;&lt;/div&gt; &lt;p&gt;After registering, you will be redirected to the main screen of Apicurio.&lt;b&gt; &lt;/b&gt;Then, after discussing with the consumer what they wish to have for the customer service, you can start creating the contract by clicking &lt;b&gt;Create New API&lt;/b&gt;.&lt;br /&gt; &lt;b&gt;&lt;br /&gt; &lt;/b&gt;&lt;a href="http://2.bp.blogspot.com/-PwRajchevj0/WztyzBw4vQI/AAAAAAAAFlk/YafjXYkrJL0t46mWjImoox8IoAe37u2zACK4BGAYYCw/s1600/Screen%2BShot%2B2018-07-03%2Bat%2B8.06.13%2BAM.png"&gt;&lt;img src="https://2.bp.blogspot.com/-PwRajchevj0/WztyzBw4vQI/AAAAAAAAFlk/YafjXYkrJL0t46mWjImoox8IoAe37u2zACK4BGAYYCw/s640/Screen%2BShot%2B2018-07-03%2Bat%2B8.06.13%2BAM.png" width="640" height="332" border="0" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;What you need to do next is pretty simple:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Create the API (service).&lt;/li&gt; &lt;li&gt;Create the data definitions (if any are required).&lt;/li&gt; &lt;li&gt;Add paths; define parameters and operations; and return responses to the paths.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;Enter the name of the service, and it would be nice to add a description for the service so it&amp;#8217;s easier for people to understand what every path means.&lt;/p&gt; &lt;p&gt;&lt;a href="http://1.bp.blogspot.com/-nYGSbZRAjac/WzuWDhWRC8I/AAAAAAAAFpI/jzK4uncQ8FgXzCIj-K9Dc3oBgIhb8pRNgCK4BGAYYCw/s1600/Screen%2BShot%2B2018-07-03%2Bat%2B11.27.59%2BAM.png"&gt;&lt;img src="https://1.bp.blogspot.com/-nYGSbZRAjac/WzuWDhWRC8I/AAAAAAAAFpI/jzK4uncQ8FgXzCIj-K9Dc3oBgIhb8pRNgCK4BGAYYCw/s640/Screen%2BShot%2B2018-07-03%2Bat%2B11.27.59%2BAM.png" width="640" height="158" border="0" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;div&gt;Enter a customer definition to show info about what we are going exchange.&lt;/div&gt; &lt;p&gt;&lt;a href="http://3.bp.blogspot.com/-lYJT8fTF56E/Wzt220wWDjI/AAAAAAAAFmI/26TUka6CyPcZfen6tCUQX-Zu1zVuC911gCK4BGAYYCw/s1600/Screen%2BShot%2B2018-07-03%2Bat%2B8.11.25%2BAM.png"&gt;&lt;img src="https://3.bp.blogspot.com/-lYJT8fTF56E/Wzt220wWDjI/AAAAAAAAFmI/26TUka6CyPcZfen6tCUQX-Zu1zVuC911gCK4BGAYYCw/s640/Screen%2BShot%2B2018-07-03%2Bat%2B8.11.25%2BAM.png" width="640" height="216" border="0" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Add and define the properties and their data type.&lt;/p&gt; &lt;div class="separator"&gt;&lt;a href="http://1.bp.blogspot.com/-abCM_73sxto/Wzt4Kg7FnpI/AAAAAAAAFmU/qJbyWPUwf2sZKQfTYjPuI8p1aqXDGo3iwCK4BGAYYCw/s1600/Screen%2BShot%2B2018-07-03%2Bat%2B8.24.36%2BAM.png"&gt;&lt;img src="https://1.bp.blogspot.com/-abCM_73sxto/Wzt4Kg7FnpI/AAAAAAAAFmU/qJbyWPUwf2sZKQfTYjPuI8p1aqXDGo3iwCK4BGAYYCw/s640/Screen%2BShot%2B2018-07-03%2Bat%2B8.24.36%2BAM.png" width="640" height="178" border="0" /&gt;&lt;/a&gt;&lt;a href="http://4.bp.blogspot.com/-7KqBiY8QYP0/Wzt4MKqqdnI/AAAAAAAAFmc/78f-wIvgAuALhj2g5aFMyQ4gs0b02SE4QCK4BGAYYCw/s1600/Screen%2BShot%2B2018-07-03%2Bat%2B8.27.54%2BAM.png"&gt;&lt;img src="https://4.bp.blogspot.com/-7KqBiY8QYP0/Wzt4MKqqdnI/AAAAAAAAFmc/78f-wIvgAuALhj2g5aFMyQ4gs0b02SE4QCK4BGAYYCw/s400/Screen%2BShot%2B2018-07-03%2Bat%2B8.27.54%2BAM.png" width="400" height="251" border="0" /&gt;&lt;/a&gt;&lt;/div&gt; &lt;div class="separator"&gt;&lt;/div&gt; &lt;div&gt;&lt;/div&gt; &lt;div class=""&gt;Then you can start adding the paths to the document.&lt;/div&gt; &lt;div&gt;&lt;/div&gt; &lt;div&gt;&lt;/div&gt; &lt;div class="separator"&gt;&lt;a href="http://4.bp.blogspot.com/-swa98cIRZzs/Wzt_DIkuxMI/AAAAAAAAFms/0TjvMT6wqTI62IOrL8PayzaE9zFE3aMDQCK4BGAYYCw/s1600/Screen%2BShot%2B2018-07-03%2Bat%2B8.07.43%2BAM.png"&gt;&lt;img src="https://4.bp.blogspot.com/-swa98cIRZzs/Wzt_DIkuxMI/AAAAAAAAFms/0TjvMT6wqTI62IOrL8PayzaE9zFE3aMDQCK4BGAYYCw/s640/Screen%2BShot%2B2018-07-03%2Bat%2B8.07.43%2BAM.png" width="640" height="170" border="0" /&gt;&lt;/a&gt;&lt;/div&gt; &lt;div class="separator"&gt;&lt;/div&gt; &lt;div&gt;&lt;/div&gt; &lt;div class="separator"&gt;Add parameters and define their type.&lt;/div&gt; &lt;div&gt;&lt;/div&gt; &lt;div class="separator"&gt;&lt;/div&gt; &lt;div class="separator"&gt;&lt;a href="http://4.bp.blogspot.com/-OZ3nXxrFT6I/Wzt_PNEi4HI/AAAAAAAAFm0/AoMy4DeX7ec9PmkurBta2zzT-M7b4qIBwCK4BGAYYCw/s1600/Screen%2BShot%2B2018-07-03%2Bat%2B8.28.04%2BAM.png"&gt;&lt;img src="https://4.bp.blogspot.com/-OZ3nXxrFT6I/Wzt_PNEi4HI/AAAAAAAAFm0/AoMy4DeX7ec9PmkurBta2zzT-M7b4qIBwCK4BGAYYCw/s640/Screen%2BShot%2B2018-07-03%2Bat%2B8.28.04%2BAM.png" width="640" height="240" border="0" /&gt;&lt;/a&gt;&lt;/div&gt; &lt;p&gt;&amp;#160;&lt;/p&gt; &lt;div class="separator"&gt;&lt;/div&gt; &lt;p&gt;&lt;a href="http://1.bp.blogspot.com/-2x-JSSeBHj0/Wzt_mgy1fXI/AAAAAAAAFnE/B7PsCRbU3487BaAP6RnzfRJbPEgTSOHNgCK4BGAYYCw/s1600/Screen%2BShot%2B2018-07-03%2Bat%2B8.28.50%2BAM.png"&gt;&lt;img src="https://1.bp.blogspot.com/-2x-JSSeBHj0/Wzt_mgy1fXI/AAAAAAAAFnE/B7PsCRbU3487BaAP6RnzfRJbPEgTSOHNgCK4BGAYYCw/s640/Screen%2BShot%2B2018-07-03%2Bat%2B8.28.50%2BAM.png" width="640" height="402" border="0" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&lt;a href="http://4.bp.blogspot.com/-UaS3tO6kqpQ/Wzt_nSLFVHI/AAAAAAAAFnM/2p3CJNQpDRM7c6qHk0noKfcBgTj19F2hQCK4BGAYYCw/s1600/Screen%2BShot%2B2018-07-03%2Bat%2B8.28.58%2BAM.png"&gt;&lt;img src="https://4.bp.blogspot.com/-UaS3tO6kqpQ/Wzt_nSLFVHI/AAAAAAAAFnM/2p3CJNQpDRM7c6qHk0noKfcBgTj19F2hQCK4BGAYYCw/s640/Screen%2BShot%2B2018-07-03%2Bat%2B8.28.58%2BAM.png" width="640" height="236" border="0" /&gt;&lt;/a&gt;&lt;br /&gt; &lt;a href="http://3.bp.blogspot.com/-nj6qZhw1GBo/Wzt_tsuHMeI/AAAAAAAAFnU/3ZGagdOEu9Q50qJaxU1QFrKgpCLeX4kxwCK4BGAYYCw/s1600/Screen%2BShot%2B2018-07-03%2Bat%2B8.29.21%2BAM.png"&gt;&lt;img src="https://3.bp.blogspot.com/-nj6qZhw1GBo/Wzt_tsuHMeI/AAAAAAAAFnU/3ZGagdOEu9Q50qJaxU1QFrKgpCLeX4kxwCK4BGAYYCw/s640/Screen%2BShot%2B2018-07-03%2Bat%2B8.29.21%2BAM.png" width="640" height="136" border="0" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Add responses, too (if your path needs them).&lt;/p&gt; &lt;p&gt;&lt;a href="http://1.bp.blogspot.com/-QmmJKkRFnqg/WzuCYXCyjoI/AAAAAAAAFno/bw8o469bwoMuZ07ey1GyZs1r1XGzJEsZQCK4BGAYYCw/s1600/Screen%2BShot%2B2018-07-03%2Bat%2B8.36.37%2BAM.png"&gt;&lt;img src="https://1.bp.blogspot.com/-QmmJKkRFnqg/WzuCYXCyjoI/AAAAAAAAFno/bw8o469bwoMuZ07ey1GyZs1r1XGzJEsZQCK4BGAYYCw/s640/Screen%2BShot%2B2018-07-03%2Bat%2B8.36.37%2BAM.png" width="640" height="408" border="0" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Once you are done, it&amp;#8217;s time to export the API standard document.&lt;/p&gt; &lt;p&gt;&lt;a href="http://4.bp.blogspot.com/-XDM2UyK6Bsk/WzuDBZjtgwI/AAAAAAAAFn0/Ks_HsobFs1EIXRTblCpKXGW0vthr90jhQCK4BGAYYCw/s1600/Screen%2BShot%2B2018-07-03%2Bat%2B8.43.13%2BAM.png"&gt;&lt;img src="https://4.bp.blogspot.com/-XDM2UyK6Bsk/WzuDBZjtgwI/AAAAAAAAFn0/Ks_HsobFs1EIXRTblCpKXGW0vthr90jhQCK4BGAYYCw/s640/Screen%2BShot%2B2018-07-03%2Bat%2B8.43.13%2BAM.png" width="640" height="292" border="0" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;h3&gt;&lt;b&gt;Generating the Red Hat Fuse Project from the Standard API Document&lt;/b&gt;&lt;/h3&gt; &lt;p&gt;Go to Red Hat Developer Studio and create a new Red Hat Fuse project by right-clicking in the navigation panel and selecting &lt;strong&gt;New-&amp;#62;Fuse Integration Project&lt;/strong&gt;.&lt;/p&gt; &lt;p&gt;&lt;a href="http://4.bp.blogspot.com/-WJPxKJf_8sQ/WzuDXnvgfNI/AAAAAAAAFoI/v5x9AxjkvO0OMc-q_fF1CeW2cBW5IWNIwCK4BGAYYCw/s1600/Screen%2BShot%2B2018-07-03%2Bat%2B10.08.18%2BAM.png"&gt;&lt;img src="https://4.bp.blogspot.com/-WJPxKJf_8sQ/WzuDXnvgfNI/AAAAAAAAFoI/v5x9AxjkvO0OMc-q_fF1CeW2cBW5IWNIwCK4BGAYYCw/s640/Screen%2BShot%2B2018-07-03%2Bat%2B10.08.18%2BAM.png" width="640" height="224" border="0" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Provide a name for the project.&lt;/p&gt; &lt;div&gt;&lt;a href="http://1.bp.blogspot.com/-H3aeymLiXIk/WzuDQ6MwfrI/AAAAAAAAFn8/W0u6VQx5AWg8_NPsVMYNwpeh5xZ72NEvQCK4BGAYYCw/s1600/Screen%2BShot%2B2018-07-03%2Bat%2B8.51.36%2BAM.png"&gt;&lt;img src="https://1.bp.blogspot.com/-H3aeymLiXIk/WzuDQ6MwfrI/AAAAAAAAFn8/W0u6VQx5AWg8_NPsVMYNwpeh5xZ72NEvQCK4BGAYYCw/s320/Screen%2BShot%2B2018-07-03%2Bat%2B8.51.36%2BAM.png" width="320" height="212" border="0" /&gt;&lt;/a&gt;&lt;/div&gt; &lt;p&gt;We are going to use a microservices approach, so select the most-popular runtime—Spring Boot. We will be running this on the Red Hat OpenShift cloud platform.&lt;/p&gt; &lt;div&gt;&lt;a href="http://4.bp.blogspot.com/-FG9ynb0VjVg/WzuEF0ADebI/AAAAAAAAFoY/si2x1omk0pwJFHXz2z39ipS3FHMMV1EbwCK4BGAYYCw/s1600/Screen%2BShot%2B2018-07-03%2Bat%2B8.51.45%2BAM.png"&gt;&lt;img src="https://4.bp.blogspot.com/-FG9ynb0VjVg/WzuEF0ADebI/AAAAAAAAFoY/si2x1omk0pwJFHXz2z39ipS3FHMMV1EbwCK4BGAYYCw/s400/Screen%2BShot%2B2018-07-03%2Bat%2B8.51.45%2BAM.png" width="356" height="400" border="0" /&gt;&lt;/a&gt;&lt;/div&gt; &lt;p&gt;Select the Spring DSL template.&lt;/p&gt; &lt;div&gt;&lt;a href="http://1.bp.blogspot.com/-wy1LtMUGz7Y/WzuEaVaCtWI/AAAAAAAAFok/Y6g8jJ3aJEs2rq7uifgEyKOPnxC6N3c5QCK4BGAYYCw/s1600/Screen%2BShot%2B2018-07-03%2Bat%2B8.51.59%2BAM.png"&gt;&lt;img src="https://1.bp.blogspot.com/-wy1LtMUGz7Y/WzuEaVaCtWI/AAAAAAAAFok/Y6g8jJ3aJEs2rq7uifgEyKOPnxC6N3c5QCK4BGAYYCw/s400/Screen%2BShot%2B2018-07-03%2Bat%2B8.51.59%2BAM.png" width="360" height="400" border="0" /&gt;&lt;/a&gt;&lt;/div&gt; &lt;p&gt;You will then have a sample Red Hat Fuse project:&lt;/p&gt; &lt;p&gt;&lt;a href="http://2.bp.blogspot.com/-8yKi5i3kJdw/WzuFrH9Y0lI/AAAAAAAAFow/AVHm18CKbkIELG0mL3uSLCnzJOMF_EsgQCK4BGAYYCw/s1600/Screen%2BShot%2B2018-07-03%2Bat%2B10.17.38%2BAM.png"&gt;&lt;img src="https://2.bp.blogspot.com/-8yKi5i3kJdw/WzuFrH9Y0lI/AAAAAAAAFow/AVHm18CKbkIELG0mL3uSLCnzJOMF_EsgQCK4BGAYYCw/s640/Screen%2BShot%2B2018-07-03%2Bat%2B10.17.38%2BAM.png" width="640" height="144" border="0" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Add the generated API specification document to the directory &lt;code&gt;src/spec/&lt;/code&gt;.&lt;/p&gt; &lt;div class="separator"&gt;&lt;a href="http://3.bp.blogspot.com/-gNgkWcdI64c/WzuNhvUnKmI/AAAAAAAAFo8/kmW2PwCHAg8sjlnNwQvvKgbxZ7dsiUqMACK4BGAYYCw/s1600/Screen%2BShot%2B2018-07-03%2Bat%2B10.50.43%2BAM.png"&gt;&lt;img src="https://3.bp.blogspot.com/-gNgkWcdI64c/WzuNhvUnKmI/AAAAAAAAFo8/kmW2PwCHAg8sjlnNwQvvKgbxZ7dsiUqMACK4BGAYYCw/s320/Screen%2BShot%2B2018-07-03%2Bat%2B10.50.43%2BAM.png" width="320" height="277" border="0" /&gt;&lt;/a&gt;&lt;/div&gt; &lt;p&gt;Edit the &lt;code&gt;pom.xml&lt;/code&gt; file, and add the following to it:&lt;/p&gt; &lt;pre&gt;&amp;#60;plugins&amp;#62; .... &amp;#60;plugin&amp;#62;   &amp;#60;groupId&amp;#62;org.apache.camel&amp;#60;/groupId&amp;#62;   &amp;#60;artifactId&amp;#62;camel-restdsl-swagger-plugin&amp;#60;/artifactId&amp;#62;   &amp;#60;version&amp;#62;2.21.0&amp;#60;/version&amp;#62;   &amp;#60;configuration&amp;#62;     &amp;#60;specificationUri&amp;#62;src/spec/MyCustomer.json&amp;#60;/specificationUri&amp;#62;     &amp;#60;fileName&amp;#62;camel-rest.xml&amp;#60;/fileName&amp;#62;     &amp;#60;outputDirectory&amp;#62;src/main/resources/spring&amp;#60;/outputDirectory&amp;#62;       &amp;#60;/configuration&amp;#62; &amp;#60;/plugin&amp;#62; .... &amp;#60;/plugin&amp;#62; &lt;/pre&gt; &lt;p&gt;Generate the XML by running the following in the command-line tool: &lt;b&gt;  &lt;/b&gt;&lt;/p&gt; &lt;p&gt;&lt;code&gt;mvn camel-restdsl-swagger:generate-xml&lt;/code&gt;&lt;/p&gt; &lt;p&gt;&lt;a href="http://3.bp.blogspot.com/-aqD9wgB3KFE/WzuW2nHTU1I/AAAAAAAAFpU/HOO-xkHd89QeWNkBD2kaBjuLMbUCv9ZRQCK4BGAYYCw/s1600/Screen%2BShot%2B2018-07-03%2Bat%2B11.31.08%2BAM.png"&gt;&lt;img src="https://3.bp.blogspot.com/-aqD9wgB3KFE/WzuW2nHTU1I/AAAAAAAAFpU/HOO-xkHd89QeWNkBD2kaBjuLMbUCv9ZRQCK4BGAYYCw/s640/Screen%2BShot%2B2018-07-03%2Bat%2B11.31.08%2BAM.png" width="640" height="190" border="0" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;You will then find a newly generated Camel context named &lt;code&gt;camel-rest.xml&lt;/code&gt;, which has all the path implementations in Camel.&lt;/p&gt; &lt;p&gt;&lt;a href="http://2.bp.blogspot.com/-ZHrnbN0ukGs/WzuYTa0XpxI/AAAAAAAAFps/sAGdtJQUmDgbyJ4Nb8Zzp30F6UJ5jFcpACK4BGAYYCw/s1600/Screen%2BShot%2B2018-07-03%2Bat%2B11.33.36%2BAM.png"&gt;&lt;img src="https://2.bp.blogspot.com/-ZHrnbN0ukGs/WzuYTa0XpxI/AAAAAAAAFps/sAGdtJQUmDgbyJ4Nb8Zzp30F6UJ5jFcpACK4BGAYYCw/s640/Screen%2BShot%2B2018-07-03%2Bat%2B11.33.36%2BAM.png" width="640" height="206" border="0" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&amp;#160;&lt;/p&gt; &lt;p&gt;&amp;#160;&lt;/p&gt; &lt;p&gt;From that file, copy everything inside the &lt;code&gt;&amp;#60;rests&amp;#62;&lt;/code&gt; tags and paste it into the original &lt;code&gt;camel-context.xml&lt;/code&gt; file inside &lt;code&gt;camelContext&lt;/code&gt;. Add the following rest configuration on top of the rest block.&lt;/p&gt; &lt;pre&gt;&amp;#60;restConfiguration apiContextPath="api-docs" bindingMode="auto"             component="undertow" contextPath="/customer"             enableCORS="true" port="8080"&amp;#62;    &amp;#60;apiProperty key="cors" value="true"/&amp;#62;    &amp;#60;apiProperty key="api.title" value="Customer Service"/&amp;#62;    &amp;#60;apiProperty key="api.version" value="1.0.0"/&amp;#62; &amp;#60;/restConfiguration&amp;#62;&lt;/pre&gt; &lt;div&gt;&lt;/div&gt; &lt;div&gt;&lt;/div&gt; &lt;div&gt;&lt;/div&gt; &lt;div&gt;&lt;a href="http://3.bp.blogspot.com/-TcwfnhhYf_Y/WzufhZBQE5I/AAAAAAAAFp4/gJ25mM5u_5QW1qKOpiWQddOuh1daxuVIwCK4BGAYYCw/s1600/Screen%2BShot%2B2018-07-03%2Bat%2B12.07.58%2BPM.png"&gt;&lt;img src="https://3.bp.blogspot.com/-TcwfnhhYf_Y/WzufhZBQE5I/AAAAAAAAFp4/gJ25mM5u_5QW1qKOpiWQddOuh1daxuVIwCK4BGAYYCw/s640/Screen%2BShot%2B2018-07-03%2Bat%2B12.07.58%2BPM.png" width="640" height="222" border="0" /&gt;&lt;/a&gt;&lt;/div&gt; &lt;div&gt;&lt;/div&gt; &lt;div&gt;&lt;/div&gt; &lt;div&gt;&lt;/div&gt; &lt;div&gt;&lt;/div&gt; &lt;div&gt;Delete the generated &lt;code&gt;camel-rest.xml&lt;/code&gt; file.&lt;/div&gt; &lt;h3&gt;Mocking the APIs with Apache Camel&lt;/h3&gt; &lt;p&gt;We will mock the returned result by adding a constant, defined bean in the Camel context.&lt;/p&gt; &lt;p&gt;To do that, in the &lt;code&gt;src/main.resource/spring&lt;/code&gt; folder, add a &lt;code&gt;beans.xml&lt;/code&gt;&lt;b&gt; &lt;/b&gt;file&lt;b&gt; &lt;/b&gt;by right-clicking the folder and selecting &lt;strong&gt;New-&amp;#62;beans.xml File&lt;/strong&gt;.&lt;/p&gt; &lt;p&gt;&lt;a href="http://2.bp.blogspot.com/-Og8GmwF5Ri8/Wz4sotd7_nI/AAAAAAAAFqI/ZJA_QTS96-0QuhKo0iLClYb4YdL87On7wCK4BGAYYCw/s1600/Screen%2BShot%2B2018-07-05%2Bat%2B10.34.50%2BAM.png"&gt;&lt;img src="https://2.bp.blogspot.com/-Og8GmwF5Ri8/Wz4sotd7_nI/AAAAAAAAFqI/ZJA_QTS96-0QuhKo0iLClYb4YdL87On7wCK4BGAYYCw/s640/Screen%2BShot%2B2018-07-05%2Bat%2B10.34.50%2BAM.png" width="640" height="346" border="0" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;Insert the following code snippet to the &lt;code&gt;beans.xml&lt;/code&gt; file:&lt;/p&gt; &lt;pre&gt;&amp;#60;util:list id="CustomerList" list-class="java.util.ArrayList"&amp;#62;    &amp;#60;ref bean="Customer"/&amp;#62; &amp;#60;/util:list&amp;#62; &amp;#60;util:map id="Customer" map-class="java.util.HashMap"&amp;#62;    &amp;#60;entry key="name" value="Christina"/&amp;#62;    &amp;#60;entry key="age" value="28"/&amp;#62;    &amp;#60;entry key="contact" value="765483921"/&amp;#62; &amp;#60;/util:map&amp;#62; &lt;/pre&gt; &lt;p&gt;Add the Camel routes to the &lt;code&gt;camel-context.xml&lt;/code&gt; file. The first one returns mock customer data, and the second one takes customer info as input.&lt;/p&gt; &lt;pre&gt;&amp;#60;route id="rest1-route"&amp;#62;  &amp;#60;from id="restone" uri="direct:rest1"/&amp;#62;   &amp;#60;setBody id="route-setBody1"&amp;#62;     &amp;#60;simple&amp;#62;bean:CustomerList?method=get(0)&amp;#60;/simple&amp;#62;   &amp;#60;/setBody&amp;#62; &amp;#60;/route&amp;#62; &amp;#60;route id="rest2-route"&amp;#62;   &amp;#60;from id="resttwo" uri="direct:rest2"/&amp;#62;   &amp;#60;log id="input-log" message="&amp;#62;&amp;#62;&amp;#62; ${body}"/&amp;#62;     &amp;#60;setBody id="route-setBody2"&amp;#62;       &amp;#60;simple&amp;#62;Customer created&amp;#60;/simple&amp;#62;     &amp;#60;/setBody&amp;#62; &amp;#60;/route&amp;#62;&lt;/pre&gt; &lt;p&gt;Now, it&amp;#8217;s time to set up the dependency libraries in the &lt;code&gt;pom.xml&lt;/code&gt; file:&lt;/p&gt; &lt;pre&gt;&amp;#60;dependency&amp;#62;   &amp;#60;groupId&amp;#62;org.springframework.boot&amp;#60;/groupId&amp;#62;   &amp;#60;artifactId&amp;#62;spring-boot-starter-undertow&amp;#60;/artifactId&amp;#62; &amp;#60;/dependency&amp;#62; &amp;#60;dependency&amp;#62;   &amp;#60;groupId&amp;#62;org.apache.camel&amp;#60;/groupId&amp;#62;   &amp;#60;artifactId&amp;#62;camel-undertow-starter&amp;#60;/artifactId&amp;#62; &amp;#60;/dependency&amp;#62;  &amp;#60;dependency&amp;#62;   &amp;#60;groupId&amp;#62;org.apache.camel&amp;#60;/groupId&amp;#62;   &amp;#60;artifactId&amp;#62;camel-jackson-starter&amp;#60;/artifactId&amp;#62; &amp;#60;/dependency&amp;#62;  &amp;#60;dependency&amp;#62;   &amp;#60;groupId&amp;#62;org.apache.camel&amp;#60;/groupId&amp;#62;   &amp;#60;artifactId&amp;#62;camel-swagger-java-starter&amp;#60;/artifactId&amp;#62; &amp;#60;/dependency&amp;#62; &lt;/pre&gt; &lt;div&gt;Finally, it&amp;#8217;s time to test by running the following at the command line:&lt;/div&gt; &lt;p&gt;&lt;code&gt;mvn sprint-boot:run&lt;/code&gt;&lt;/p&gt; &lt;p&gt;Two endpoints will be exposed for testing:&lt;/p&gt; &lt;pre&gt;Christina Laptop$ curl http://YOURIP:8080/customer/id/123 {"name":"Christina","age":"28","contact":"765483921"} Christina Laptop$ curl --header "Content-Type: application/json"   --request PUT   --data '{"name":"Christina","age":28,"contact":"765483921"}'   http://YOURIP:8080/customer/add "Customer created" &lt;/pre&gt; &lt;p&gt;You are now ready for the consumer to start testing the APIs.&lt;/p&gt; &lt;p&gt;In the next article in this series, I will take you through how to actually implement the API, expose it in the cloud, and manage it.&lt;/p&gt; &lt;hr /&gt; &lt;p&gt;For more information see these Red Hat Developer resources:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;[DevNation Live] &amp;#8211; &lt;a href="https://developers.redhat.com/videos/youtube/zuEYtMvHN6g/"&gt;Camel Riders in the Cloud&lt;/a&gt; &amp;#8211; Watch the recording of Claus Ibsen,  author of the Camel in Action books.&lt;/li&gt; &lt;li&gt;Download the free ebook &amp;#8211; &lt;a href="https://developers.redhat.com/books/selections-camel-action/"&gt;Selections from Camel in Action, 2nd edition&lt;/a&gt;.&lt;/li&gt; &lt;li&gt;Learn more about &lt;a href="https://developers.redhat.com/products/fuse/overview/"&gt;Red Hat Fuse&lt;/a&gt; &amp;#8211; a distributed, cloud-native integration solution that is based on Camel&lt;/li&gt; &lt;li&gt;Read &lt;a href="https://developers.redhat.com/blog/2018/04/11/api-journey-idea-deployment-agile-part1/"&gt;An API Journey: From idea to deployment the Agile Way &amp;#8211; Part 1&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F12%2Fcontract-first-api-design-with-apicurio-and-red-hat-fuse%2F&amp;#38;linkname=Contract-First%20API%20Design%20with%20Apicurio%20and%20Red%20Hat%20Fuse%2FCamel" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F12%2Fcontract-first-api-design-with-apicurio-and-red-hat-fuse%2F&amp;#38;linkname=Contract-First%20API%20Design%20with%20Apicurio%20and%20Red%20Hat%20Fuse%2FCamel" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F12%2Fcontract-first-api-design-with-apicurio-and-red-hat-fuse%2F&amp;#38;linkname=Contract-First%20API%20Design%20with%20Apicurio%20and%20Red%20Hat%20Fuse%2FCamel" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F12%2Fcontract-first-api-design-with-apicurio-and-red-hat-fuse%2F&amp;#38;linkname=Contract-First%20API%20Design%20with%20Apicurio%20and%20Red%20Hat%20Fuse%2FCamel" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F12%2Fcontract-first-api-design-with-apicurio-and-red-hat-fuse%2F&amp;#38;linkname=Contract-First%20API%20Design%20with%20Apicurio%20and%20Red%20Hat%20Fuse%2FCamel" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F12%2Fcontract-first-api-design-with-apicurio-and-red-hat-fuse%2F&amp;#38;linkname=Contract-First%20API%20Design%20with%20Apicurio%20and%20Red%20Hat%20Fuse%2FCamel" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F12%2Fcontract-first-api-design-with-apicurio-and-red-hat-fuse%2F&amp;#38;linkname=Contract-First%20API%20Design%20with%20Apicurio%20and%20Red%20Hat%20Fuse%2FCamel" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F12%2Fcontract-first-api-design-with-apicurio-and-red-hat-fuse%2F&amp;#38;linkname=Contract-First%20API%20Design%20with%20Apicurio%20and%20Red%20Hat%20Fuse%2FCamel" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F12%2Fcontract-first-api-design-with-apicurio-and-red-hat-fuse%2F&amp;#38;title=Contract-First%20API%20Design%20with%20Apicurio%20and%20Red%20Hat%20Fuse%2FCamel" data-a2a-url="https://developers.redhat.com/blog/2018/07/12/contract-first-api-design-with-apicurio-and-red-hat-fuse/" data-a2a-title="Contract-First API Design with Apicurio and Red Hat Fuse/Camel"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/07/12/contract-first-api-design-with-apicurio-and-red-hat-fuse/"&gt;Contract-First API Design with Apicurio and Red Hat Fuse/Camel&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/C5nm9tnzf08" height="1" width="1" alt=""/&gt;</content><summary>This is part one of my two-article series that demonstrates how to implement contract-first API design using Apicurio and Red Hat Fuse.  It covers how to create an OpenAPI standard document as the contract between API providers and consumers using Apicurio Studio. It also shows how to quickly create mock tests using Red Hat Fuse which is based on Camel. There are two common approaches when it come...</summary><dc:creator>Christina Lin</dc:creator><dc:date>2018-07-12T16:00:52Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2018/07/12/contract-first-api-design-with-apicurio-and-red-hat-fuse/</feedburner:origLink></entry><entry><title>Debezium 0.8 Final Is Released</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/j2kHXWMDzj0/" /><category term="docker" scheme="searchisko:content:tags" /><category term="feed_group_name_debezium" scheme="searchisko:content:tags" /><category term="feed_name_debezium" scheme="searchisko:content:tags" /><category term="mongodb" scheme="searchisko:content:tags" /><category term="mysql" scheme="searchisko:content:tags" /><category term="oracle" scheme="searchisko:content:tags" /><category term="postgres" scheme="searchisko:content:tags" /><category term="releases" scheme="searchisko:content:tags" /><author><name>Gunnar Morling</name></author><id>searchisko:content:id:jbossorg_blog-debezium_0_8_final_is_released</id><updated>2018-07-12T15:02:35Z</updated><published>2018-07-12T00:00:00Z</published><content type="html">&lt;div id="preamble"&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;I’m very happy to announce the release of Debezium &lt;strong&gt;0.8.0.Final&lt;/strong&gt;!&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The key features of Debezium 0.8 are the first work-in-progress version of our &lt;a href="http://debezium.io/docs/connectors/oracle/"&gt;Oracle connector&lt;/a&gt; (based on the XStream API) and a brand-new parser for MySQL DDL statements. Besides that, there are plenty of smaller new features (e.g. propagation of default values to corresponding Connect schemas, optional propagation of source queries in CDC messages and a largely improved SMT for sinking changes from MongoDB into RDBMS) as well as lots of bug fixes (e.g. around temporal and numeric column types, large transactions with Postgres).&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Please see the previous announcements (&lt;a href="http://debezium.io/blog/2018/06/21/debezium-0-8-0-beta1-released/"&gt;Beta 1&lt;/a&gt;, &lt;a href="http://debezium.io/blog/2018/07/04/debezium-0-8-0-cr1-released/"&gt;CR 1&lt;/a&gt;) to learn about all the changes in more depth. The Final release largely resembles CR1; apart from further improvements to the Oracle connector (&lt;a href="https://issues.jboss.org/browse/DBZ-762"&gt;DBZ-792&lt;/a&gt;) there’s one nice addition to the MySQL connector contributed by &lt;a href="https://github.com/pgoranss"&gt;Peter Goransson&lt;/a&gt;: when doing a snapshot, it will now expose information about the processed rows via JMX (&lt;a href="https://issues.jboss.org/browse/DBZ-789"&gt;DBZ-789&lt;/a&gt;), which is very handy when snapshotting larger tables.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Please take a look at the &lt;a href="http://debezium.io/docs/releases/#release-0-8-0-final"&gt;change log&lt;/a&gt; for the complete list of changes in 0.8.0.Final and general upgrade notes.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="what_s_next"&gt;&lt;a class="anchor" href="#what_s_next"&gt;&lt;/a&gt;What’s next?&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;We’re continuing our work on the Oracle connector. The work on initial snapshotting is well progressing and it should be part of the next release. Other improvements will be support for structural changes to captured tables after the initial snapshot has been made, more extensive source info metadata and more. Please track &lt;a href="https://issues.jboss.org/browse/DBZ-716"&gt;DBZ-716&lt;/a&gt; for this work; the improvements are planned to be released incrementally in the upcoming versions of Debezium.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;We’ve also started to explore ingesting changes via LogMiner. This is more involved in terms of engineering efforts than using XStream, but it comes with the huge advantage of not requiring a separate license (LogMiner comes with the Oracle database itself). It’s not quite clear yet when we can release something on this front, and we’re also actively exploring further alternatives. But we are quite optimistic and hope to have something some time soon.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;The other focus of work is a connector for SQL Server (see &lt;a href="https://issues.jboss.org/browse/DBZ-40"&gt;DBZ-40&lt;/a&gt;). Work on this has started as well, and there should be an Alpha1 release of Debezium 0.9 with a first drop of that connector within the next few weeks.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;To find out about some more long term ideas, please check out our &lt;a href="http://debezium.io/docs/roadmap/"&gt;roadmap&lt;/a&gt; and get in touch with us, if you got any ideas or suggestions for future development.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="about_debezium"&gt;&lt;a class="anchor" href="#about_debezium"&gt;&lt;/a&gt;About Debezium&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Debezium is an open source distributed platform that turns your existing databases into event streams, so applications can see and respond almost instantly to each committed row-level change in the databases. Debezium is built on top of &lt;a href="http://kafka.apache.org/"&gt;Kafka&lt;/a&gt; and provides &lt;a href="http://kafka.apache.org/documentation.html#connect"&gt;Kafka Connect&lt;/a&gt; compatible connectors that monitor specific database management systems. Debezium records the history of data changes in Kafka logs, so your application can be stopped and restarted at any time and can easily consume all of the events it missed while it was not running, ensuring that all events are processed correctly and completely. Debezium is &lt;a href="http://debezium.io/license"&gt;open source&lt;/a&gt; under the &lt;a href="http://www.apache.org/licenses/LICENSE-2.0.html"&gt;Apache License, Version 2.0&lt;/a&gt;.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="get_involved"&gt;&lt;a class="anchor" href="#get_involved"&gt;&lt;/a&gt;Get involved&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;We hope you find Debezium interesting and useful, and want to give it a try. Follow us on Twitter &lt;a href="https://twitter.com/debezium"&gt;@debezium&lt;/a&gt;, &lt;a href="https://gitter.im/debezium/user"&gt;chat with us on Gitter&lt;/a&gt;, or join our &lt;a href="https://groups.google.com/forum/#!forum/debezium"&gt;mailing list&lt;/a&gt; to talk with the community. All of the code is open source &lt;a href="https://github.com/debezium/"&gt;on GitHub&lt;/a&gt;, so build the code locally and help us improve ours existing connectors and add even more connectors. If you find problems or have ideas how we can improve Debezium, please let us know or &lt;a href="https://issues.jboss.org/projects/DBZ/issues/"&gt;log an issue&lt;/a&gt;.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/j2kHXWMDzj0" height="1" width="1" alt=""/&gt;</content><summary>I’m very happy to announce the release of Debezium 0.8.0.Final! The key features of Debezium 0.8 are the first work-in-progress version of our Oracle connector (based on the XStream API) and a brand-new parser for MySQL DDL statements. Besides that, there are plenty of smaller new features (e.g. propagation of default values to corresponding Connect schemas, optional propagation of source queries ...</summary><dc:creator>Gunnar Morling</dc:creator><dc:date>2018-07-12T00:00:00Z</dc:date><feedburner:origLink>http://debezium.io/blog/2018/07/12/debezium-0-8-0-final-released/</feedburner:origLink></entry><entry><title>PodCTL Podcast #38 – A Beginner’s Guide to Kubernetes</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/hs5snq0_zTo/" /><category term="Containers" scheme="searchisko:content:tags" /><category term="docker" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="Kubernetes" scheme="searchisko:content:tags" /><category term="podcasts" scheme="searchisko:content:tags" /><category term="PodCTL Podcast" scheme="searchisko:content:tags" /><category term="prometheus" scheme="searchisko:content:tags" /><category term="Red Hat OpenShift" scheme="searchisko:content:tags" /><category term="Red Hat OpenShift Container Platform" scheme="searchisko:content:tags" /><author><name>Rob Terzi</name></author><id>searchisko:content:id:jbossorg_blog-podctl_podcast_38_a_beginner_s_guide_to_kubernetes</id><updated>2018-07-11T11:00:43Z</updated><published>2018-07-11T11:00:43Z</published><content type="html">&lt;p&gt;If you aren&amp;#8217;t following the &lt;a href="https://blog.openshift.com/"&gt;OpenShift Blog&lt;/a&gt;, you might not be aware of the &lt;a href="https://twitter.com/PodCtl"&gt;PodCTL&lt;/a&gt; podcast. It&amp;#8217;s a free weekly tech podcast covering containers, kubernetes, and OpenShift hosted by Red Hat&amp;#8217;s Brian Gracely (&lt;a href="https://twitter.com/bgracely"&gt;@bgracely&lt;/a&gt;) and Tyler Britten (&lt;a href="https://twitter.com/vmtyler"&gt;@vmtyler&lt;/a&gt;). I&amp;#8217;m reposting this episode here on the Red Hat Developer Blog because I think their realization is spot on—while early adopters might be deep into Kubernetes, many are just starting and could benefit from some insights.&lt;/p&gt; &lt;h3&gt;&lt;em&gt;Original Introduction from &lt;a href="https://blog.openshift.com/podcast-podctl-38-a-beginners-guide-to-kubernetes/"&gt;blog.openshift.com:&lt;/a&gt;&lt;/em&gt;&lt;/h3&gt; &lt;p&gt;The Kubernetes community now has 10 releases (2.5 yrs) of software and experience. We just finished &lt;a href="https://www.youtube.com/playlist?list=PLj6h78yzYM2N8GdbjmhVU65KYm_68qBmo"&gt;KubeCon Copenhagen&lt;/a&gt;, &lt;a href="https://www.youtube.com/playlist?list=PLaR6Rq6Z4Iqe5zqMhgvStXJB9d83rKRHf"&gt;OpenShift Commons Gathering&lt;/a&gt;, and &lt;a href="https://www.youtube.com/playlist?list=PLaR6Rq6Z4IqdtOkaBwLBg2kjmFa8I0hwJ"&gt;Red Hat Summit&lt;/a&gt; and we heard lots of companies talk about their deployments and journeys. But many of them took a while (12–18) months to get to where they are today. This feels like the “early adopters” and we’re beginning to get to the “crossing the chasm” part of the market. So thought we’d discuss some of the basics, lessons learned, and other things people could use to “fast-track” what they need to be successful with Kubernetes.&lt;/p&gt; &lt;p&gt;The podcast will always be available on the Red Hat OpenShift blog (&lt;a href="https://blog.openshift.com/search/?refinement=blog&amp;#38;query=PodCTL"&gt;search: #PodCTL&lt;/a&gt;), as well as on &lt;a href="http://bit.ly/2uWqaHe"&gt;RSS Feeds&lt;/a&gt;, &lt;a href="https://itunes.apple.com/us/podcast/podctl-1-3-6-ways-to-love-kubernetes/id1270983443?i=1000390948443&amp;#38;mt=2"&gt;iTunes&lt;/a&gt;, &lt;a href="http://bit.ly/2uIGoo5"&gt;Google Play&lt;/a&gt;, &lt;a href="http://bit.ly/2vWmZnG"&gt;Stitcher&lt;/a&gt;, &lt;a href="https://tunein.com/radio/PodCTL---Containers--Kubernetes--OpenShift-p1024049/"&gt;TuneIn&lt;/a&gt;, and all your favorite podcast players.&lt;/p&gt; &lt;p&gt;&lt;span id="more-505767"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;PodCTL #38 – A Beginners Guide to Kubernetes&lt;/h2&gt; &lt;p&gt;June 04, 2018&lt;br /&gt; Brian Gracely &amp;#38; Tyler Britten&lt;br /&gt; PodCTL &amp;#8211; Containers | Kubernetes | OpenShift&lt;/p&gt; &lt;p&gt;&lt;a href="https://www.buzzsprout.com/110399/718643-podctl-38-a-beginners-guide-to-kubernetes"&gt;&lt;img class=" alignnone size-medium wp-image-505927 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/07/play-podcast.jpg" src="https://developers.redhat.com/blog/wp-content/uploads/2018/07/play-podcast-300x33.jpg" alt="" width="300" height="33" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/07/play-podcast-300x33.jpg 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/07/play-podcast.jpg 700w" sizes="(max-width: 300px) 100vw, 300px" /&gt;&lt;/a&gt;&lt;/p&gt; &lt;p&gt;&amp;#160;&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Overview&lt;/strong&gt;: Brian and Tyler talk some of the basics, lessons learned, and other things people could use to “fast-track” what they need to be successful with Kubernetes.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Show Notes:&lt;/strong&gt;&lt;/p&gt; &lt;ul&gt; &lt;li&gt;&lt;a href="https://www.katacoda.com/courses/kubernetes"&gt;Learn Kubernetes&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://learn.openshift.com/"&gt;Learn OpenShift&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://www.katacoda.com/courses/docker"&gt;Learn Containers (with Docker)&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://www.katacoda.com/courses/containers-without-docker"&gt;Learn Containers (without Docker)&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://www.katacoda.com/courses/prometheus"&gt;Learn Prometheus&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;strong&gt;Show Premise:&lt;/strong&gt;&lt;br /&gt; The Kubernetes community now has 10 releases (2.5 yrs) of software and experience. We just finished KubeCon and Red Hat Summit and we heard lots of companies talk about their deployments and journeys. But many of them took a while (12–18) months to get to where they are today. This feels like the “early adopters” and we’re beginning to get to the “crossing the chasm” part of the market. So thought we’d discuss some of the basics, lessons learned, and other things people could use to “fast-track” what they need to be successful with Kubernetes.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Topic 1:&lt;/strong&gt; What are the core skills needed for a team that manages/runs/interacts with a Kubernetes environment?&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Ops Skills&lt;/li&gt; &lt;li&gt;Dev Skills&lt;/li&gt; &lt;li&gt;Compliance Skills / Security Skills&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;strong&gt;Topic 2:&lt;/strong&gt; What has significantly changed in the Kubernetes world since 2015/16 to today that people should consider taking advantage of?&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Persistence&lt;/li&gt; &lt;li&gt;Immutability&lt;/li&gt; &lt;li&gt;Operators&lt;/li&gt; &lt;li&gt;Native tools vs. Config Mgmt tools&lt;/li&gt; &lt;li&gt;Storage&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;strong&gt;Topic 3:&lt;/strong&gt; What do you consider “still hard” and should probably justify more early effort?&lt;/p&gt; &lt;ul&gt; &lt;li&gt;Security?&lt;/li&gt; &lt;li&gt;Storage?&lt;/li&gt; &lt;li&gt;Monitoring?&lt;/li&gt; &lt;li&gt;Being overly precise about capacity planning?&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;strong&gt;Topic 4:&lt;/strong&gt; What patterns have you seen from successful deployments and customer behaviors?&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Feedback?&lt;/strong&gt;&lt;br /&gt; Email: &lt;a href="mailto:podctl@gmail.com"&gt;PodCTL at gmail dot com&lt;/a&gt;&lt;br /&gt; Twitter: &lt;a href="https://twitter.com/PodCTL"&gt;@PodCTL&lt;/a&gt;&lt;br /&gt; Web: &lt;a href="https://blog.openshift.com/search/?refinement=blog&amp;#38;amp;query=PodCTL"&gt;http://blog.openshift.com&lt;/a&gt;, search #PodCTL&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F11%2Fpodcast-38-a-beginners-guide-to-kubernetes%2F&amp;#38;linkname=PodCTL%20Podcast%20%2338%20%E2%80%93%20A%20Beginner%E2%80%99s%20Guide%20to%20Kubernetes" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F11%2Fpodcast-38-a-beginners-guide-to-kubernetes%2F&amp;#38;linkname=PodCTL%20Podcast%20%2338%20%E2%80%93%20A%20Beginner%E2%80%99s%20Guide%20to%20Kubernetes" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F11%2Fpodcast-38-a-beginners-guide-to-kubernetes%2F&amp;#38;linkname=PodCTL%20Podcast%20%2338%20%E2%80%93%20A%20Beginner%E2%80%99s%20Guide%20to%20Kubernetes" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F11%2Fpodcast-38-a-beginners-guide-to-kubernetes%2F&amp;#38;linkname=PodCTL%20Podcast%20%2338%20%E2%80%93%20A%20Beginner%E2%80%99s%20Guide%20to%20Kubernetes" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F11%2Fpodcast-38-a-beginners-guide-to-kubernetes%2F&amp;#38;linkname=PodCTL%20Podcast%20%2338%20%E2%80%93%20A%20Beginner%E2%80%99s%20Guide%20to%20Kubernetes" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F11%2Fpodcast-38-a-beginners-guide-to-kubernetes%2F&amp;#38;linkname=PodCTL%20Podcast%20%2338%20%E2%80%93%20A%20Beginner%E2%80%99s%20Guide%20to%20Kubernetes" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F11%2Fpodcast-38-a-beginners-guide-to-kubernetes%2F&amp;#38;linkname=PodCTL%20Podcast%20%2338%20%E2%80%93%20A%20Beginner%E2%80%99s%20Guide%20to%20Kubernetes" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F11%2Fpodcast-38-a-beginners-guide-to-kubernetes%2F&amp;#38;linkname=PodCTL%20Podcast%20%2338%20%E2%80%93%20A%20Beginner%E2%80%99s%20Guide%20to%20Kubernetes" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F11%2Fpodcast-38-a-beginners-guide-to-kubernetes%2F&amp;#38;title=PodCTL%20Podcast%20%2338%20%E2%80%93%20A%20Beginner%E2%80%99s%20Guide%20to%20Kubernetes" data-a2a-url="https://developers.redhat.com/blog/2018/07/11/podcast-38-a-beginners-guide-to-kubernetes/" data-a2a-title="PodCTL Podcast #38 – A Beginner’s Guide to Kubernetes"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/07/11/podcast-38-a-beginners-guide-to-kubernetes/"&gt;PodCTL Podcast #38 – A Beginner’s Guide to Kubernetes&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/hs5snq0_zTo" height="1" width="1" alt=""/&gt;</content><summary>If you aren’t following the OpenShift Blog, you might not be aware of the PodCTL podcast. It’s a free weekly tech podcast covering containers, kubernetes, and OpenShift hosted by Red Hat’s Brian Gracely (@bgracely) and Tyler Britten (@vmtyler). I’m reposting this episode here on the Red Hat Developer Blog because I think their realization is spot on—while early adopters might be deep into Kubernet...</summary><dc:creator>Rob Terzi</dc:creator><dc:date>2018-07-11T11:00:43Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2018/07/11/podcast-38-a-beginners-guide-to-kubernetes/</feedburner:origLink></entry><entry><title>Apache Camel URI Completion with Java DSL</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/K3dPzz3Duws/" /><category term="apache camel" scheme="searchisko:content:tags" /><category term="Developer Tools" scheme="searchisko:content:tags" /><category term="Eclipse Che" scheme="searchisko:content:tags" /><category term="Eclipse Desktop" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="FUSE" scheme="searchisko:content:tags" /><category term="Fuse Tooling" scheme="searchisko:content:tags" /><category term="Java DSL" scheme="searchisko:content:tags" /><category term="JBoss Fuse" scheme="searchisko:content:tags" /><category term="OpenShift.io" scheme="searchisko:content:tags" /><category term="Red Hat Fuse" scheme="searchisko:content:tags" /><category term="Visual Studio Code" scheme="searchisko:content:tags" /><category term="VS Code" scheme="searchisko:content:tags" /><author><name>Aurélien Pupier</name></author><id>searchisko:content:id:jbossorg_blog-apache_camel_uri_completion_with_java_dsl</id><updated>2018-07-10T11:00:53Z</updated><published>2018-07-10T11:00:53Z</published><content type="html">&lt;p&gt;&lt;a href="http://camel.apache.org/"&gt;Apache Camel&lt;/a&gt; URI completion has &lt;a href="https://developers.redhat.com/blog/2018/02/15/apache-camel-uri-completion/"&gt;already been available for XML DSL&lt;/a&gt; in &lt;a href="https://marketplace.eclipse.org/content/apache-camel-language-server"&gt;Eclipse Desktop&lt;/a&gt;, &lt;a href="https://developers.redhat.com/blog/2018/05/21/apache-camel-uri-completion-easy-installation-for-eclipse-vs-code-and-openshift-io/"&gt;Eclipse Che&lt;/a&gt;, &lt;a href="https://developers.redhat.com/blog/2018/05/21/apache-camel-uri-completion-easy-installation-for-eclipse-vs-code-and-openshift-io/"&gt;Red Hat OpenShift.io&lt;/a&gt;, &lt;a href="https://marketplace.visualstudio.com/items?itemName=camel-tooling.vscode-apache-camel"&gt;Visual Studio Code&lt;/a&gt; and &lt;a href="https://plugins.jetbrains.com/plugin/9371-apache-camel-idea-plugin"&gt;IntelliJ&lt;/a&gt;. However, for Java DSL it was available only in IntelliJ. But Visual Studio Code and Eclipse Desktop are now also providing the Apache Camel URI completion for Java DSL.&lt;/p&gt; &lt;p&gt;Below, you can see it in action:&lt;/p&gt; &lt;p&gt;&lt;span id="more-504827"&gt;&lt;/span&gt;&lt;/p&gt; &lt;ul&gt; &lt;li&gt;In Eclipse Desktop IDE:&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;img class=" aligncenter wp-image-504847 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/07/completionJava-1024x504.gif" src="https://developers.redhat.com/blog/wp-content/uploads/2018/07/completionJava.gif" alt="Completion of Camel URI with Java DSL in Eclipse Desktop IDE" width="1280" height="630" /&gt;&lt;/p&gt; &lt;ul&gt; &lt;li&gt;In Visual Studio Code:&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&lt;img class=" aligncenter wp-image-504857 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/07/completionJava-1-1024x536.gif" src="https://developers.redhat.com/blog/wp-content/uploads/2018/07/completionJava-1.gif" alt="Completion of Camel URI with Java DSL in VS Code" width="1382" height="723" /&gt;&lt;/p&gt; &lt;p&gt;&lt;!--more--&gt;&lt;/p&gt; &lt;p&gt;Right now, the requirements for URI completion are:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;The filename needs to end with &lt;code&gt;.java&lt;/code&gt;&lt;em&gt;.&lt;/em&gt;&lt;/li&gt; &lt;li&gt;The file needs to contain &lt;code&gt;camel&lt;/code&gt; written somewhere.&lt;/li&gt; &lt;li&gt;The Camel URI String needs to be used directly as a parameter of the &lt;code&gt;RouteBuilder.from&lt;/code&gt; or &lt;code&gt;RouteBuilder.to&lt;/code&gt; methods (which means no space, no variable).&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;You may ask, &amp;#8220;What about Eclipse Che and OpenShift.io?&amp;#8221; Work is in progress to make URI completion possible with them also. You can follow &lt;a href="https://github.com/eclipse/che/issues/10262"&gt;this issue&lt;/a&gt; to check on the progress.&lt;/p&gt; &lt;p&gt;As a reminder, it is now easy to install Apache Camel in all these environments; see my &lt;a href="https://developers.redhat.com/blog/2018/05/21/apache-camel-uri-completion-easy-installation-for-eclipse-vs-code-and-openshift-io/"&gt;previous article&lt;/a&gt; describing the installation process.&lt;/p&gt; &lt;p&gt;If you have suggestions for improvements, please raise them in the &lt;a href="https://github.com/camel-tooling/camel-language-server/issues"&gt;issue tracker&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Enjoy this new feature!&lt;/p&gt; &lt;p&gt;&amp;#160;&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F10%2Fapache-camel-uri-completion-with-java-dsl%2F&amp;#38;linkname=Apache%20Camel%20URI%20Completion%20with%20Java%20DSL" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F10%2Fapache-camel-uri-completion-with-java-dsl%2F&amp;#38;linkname=Apache%20Camel%20URI%20Completion%20with%20Java%20DSL" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F10%2Fapache-camel-uri-completion-with-java-dsl%2F&amp;#38;linkname=Apache%20Camel%20URI%20Completion%20with%20Java%20DSL" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F10%2Fapache-camel-uri-completion-with-java-dsl%2F&amp;#38;linkname=Apache%20Camel%20URI%20Completion%20with%20Java%20DSL" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F10%2Fapache-camel-uri-completion-with-java-dsl%2F&amp;#38;linkname=Apache%20Camel%20URI%20Completion%20with%20Java%20DSL" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F10%2Fapache-camel-uri-completion-with-java-dsl%2F&amp;#38;linkname=Apache%20Camel%20URI%20Completion%20with%20Java%20DSL" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F10%2Fapache-camel-uri-completion-with-java-dsl%2F&amp;#38;linkname=Apache%20Camel%20URI%20Completion%20with%20Java%20DSL" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F10%2Fapache-camel-uri-completion-with-java-dsl%2F&amp;#38;linkname=Apache%20Camel%20URI%20Completion%20with%20Java%20DSL" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F10%2Fapache-camel-uri-completion-with-java-dsl%2F&amp;#38;title=Apache%20Camel%20URI%20Completion%20with%20Java%20DSL" data-a2a-url="https://developers.redhat.com/blog/2018/07/10/apache-camel-uri-completion-with-java-dsl/" data-a2a-title="Apache Camel URI Completion with Java DSL"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/07/10/apache-camel-uri-completion-with-java-dsl/"&gt;Apache Camel URI Completion with Java DSL&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/K3dPzz3Duws" height="1" width="1" alt=""/&gt;</content><summary>Apache Camel URI completion has already been available for XML DSL in Eclipse Desktop, Eclipse Che, Red Hat OpenShift.io, Visual Studio Code and IntelliJ. However, for Java DSL it was available only in IntelliJ. But Visual Studio Code and Eclipse Desktop are now also providing the Apache Camel URI completion for Java DSL. Below, you can see it in action: In Eclipse Desktop IDE: In Visual Studio Co...</summary><dc:creator>Aurélien Pupier</dc:creator><dc:date>2018-07-10T11:00:53Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2018/07/10/apache-camel-uri-completion-with-java-dsl/</feedburner:origLink></entry><entry><title>Mario Fusco is the new Drools Project Lead</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/ILJAqGzybKw/mario-fusco-is-new-drools-project-lead.html" /><category term="feed_group_name_drools" scheme="searchisko:content:tags" /><category term="feed_name_drools" scheme="searchisko:content:tags" /><author><name>Edson Tirelli</name></author><id>searchisko:content:id:jbossorg_blog-mario_fusco_is_the_new_drools_project_lead</id><updated>2018-07-09T18:27:33Z</updated><published>2018-07-09T18:09:00Z</published><content type="html">&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://4.bp.blogspot.com/-NqK2RVT9p7Q/W0OkmiUx6oI/AAAAAAAAAxA/XGVx18BZfCoI1uOD2uFMLeZGJpnrA_DWgCLcBGAs/s1600/mario_fusco.jpg" imageanchor="1" style="clear: left; float: left; margin-bottom: 1em; margin-right: 1em;"&gt;&lt;img border="0" data-original-height="256" data-original-width="256" src="https://4.bp.blogspot.com/-NqK2RVT9p7Q/W0OkmiUx6oI/AAAAAAAAAxA/XGVx18BZfCoI1uOD2uFMLeZGJpnrA_DWgCLcBGAs/s1600/mario_fusco.jpg" /&gt;&lt;/a&gt;&lt;/div&gt;It is my honor to announce that &lt;a href="https://www.linkedin.com/in/mario-fusco-3467213/" target="_blank"&gt;Mario Fusco&lt;/a&gt; will be taking over as the new Drools Project Lead.&lt;br /&gt;&lt;br /&gt;Mario is a Principal Software Engineer at Red Hat, working on the development of the Drools core. He has vast experience as a Java developer, and among other accomplishments, was &lt;a href="https://blogs.oracle.com/java/new-java-champion-mario-fusco" target="_blank"&gt;nominated a Java Champion in 2016&lt;/a&gt;. Mario previously created and led the open source Lambdaj project and has been involved in (and often leads) many enterprise-level projects in several industries ranging from media companies to the financial sector.&lt;br /&gt;&lt;br /&gt;Mario is a frequent speaker at conferences, like the Red Hat Summit, Devoxx, Voxxed, JavaOne, LambaWorld and others. Mario authored several articles for InfoQ and DZone, and co-authored the “&lt;a href="https://www.manning.com/books/java-8-in-action" target="_blank"&gt;Java 8 in Action&lt;/a&gt;” book published by Manning. His &lt;a href="https://www.manning.com/books/java-8-in-action" target="_blank"&gt;tweeter following&lt;/a&gt; is another hint at his popularity, and if you would like to keep up with his latest insights, I suggest you hit that button.&lt;br /&gt;&lt;br /&gt;Mario joined Red Hat in 2011 to work on the core engine of Drools and has since made invaluable contributions, including the development and improvement of the latest core algorithm. Among his interests are also functional programming and domain specific languages.&lt;br /&gt;&lt;br /&gt;If you ever have the opportunity to interact with him in person, you will experience firsthand how nice of a person he is and how pleasant it is to have a talk with him. You can even offer him a beer, he will like that, but whatever you do, make sure you follow proper Italian etiquette (or is that Mario’s etiquette?): no pineapple on your pizza and no cappuccinos after meals.&lt;br /&gt;&lt;br /&gt;Please join me in congratulating Mario on his new role as the Drools Project lead.&lt;br /&gt;&lt;br /&gt;Edson Tirelli&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;div class="feedflare"&gt; &lt;a href="http://feeds.athico.com/~ff/DroolsAtom?a=8vpYr1zxzV8:lB08nUSiuwQ:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/DroolsAtom?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.athico.com/~ff/DroolsAtom?a=8vpYr1zxzV8:lB08nUSiuwQ:gIN9vFwOqvQ"&gt;&lt;img src="http://feeds.feedburner.com/~ff/DroolsAtom?i=8vpYr1zxzV8:lB08nUSiuwQ:gIN9vFwOqvQ" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.athico.com/~ff/DroolsAtom?a=8vpYr1zxzV8:lB08nUSiuwQ:dnMXMwOfBR0"&gt;&lt;img src="http://feeds.feedburner.com/~ff/DroolsAtom?d=dnMXMwOfBR0" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.athico.com/~ff/DroolsAtom?a=8vpYr1zxzV8:lB08nUSiuwQ:F7zBnMyn0Lo"&gt;&lt;img src="http://feeds.feedburner.com/~ff/DroolsAtom?i=8vpYr1zxzV8:lB08nUSiuwQ:F7zBnMyn0Lo" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.athico.com/~ff/DroolsAtom?a=8vpYr1zxzV8:lB08nUSiuwQ:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/DroolsAtom?i=8vpYr1zxzV8:lB08nUSiuwQ:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.athico.com/~ff/DroolsAtom?a=8vpYr1zxzV8:lB08nUSiuwQ:qj6IDK7rITs"&gt;&lt;img src="http://feeds.feedburner.com/~ff/DroolsAtom?d=qj6IDK7rITs" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.athico.com/~ff/DroolsAtom?a=8vpYr1zxzV8:lB08nUSiuwQ:jWeZv7XsJd0"&gt;&lt;img src="http://feeds.feedburner.com/~ff/DroolsAtom?d=jWeZv7XsJd0" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/DroolsAtom/~4/8vpYr1zxzV8" height="1" width="1" alt=""/&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/ILJAqGzybKw" height="1" width="1" alt=""/&gt;</content><summary>It is my honor to announce that Mario Fusco will be taking over as the new Drools Project Lead. Mario is a Principal Software Engineer at Red Hat, working on the development of the Drools core. He has vast experience as a Java developer, and among other accomplishments, was nominated a Java Champion in 2016. Mario previously created and led the open source Lambdaj project and has been involved in ...</summary><dc:creator>Edson Tirelli</dc:creator><dc:date>2018-07-09T18:09:00Z</dc:date><feedburner:origLink>http://feeds.athico.com/~r/DroolsAtom/~3/8vpYr1zxzV8/mario-fusco-is-new-drools-project-lead.html</feedburner:origLink></entry><entry><title>Hibernate Community Newsletter 13/2018</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/GABgVC9ldIM/" /><category term="Discussions" scheme="searchisko:content:tags" /><category term="feed_group_name_hibernate" scheme="searchisko:content:tags" /><category term="feed_name_inrelationto" scheme="searchisko:content:tags" /><category term="Hibernate ORM" scheme="searchisko:content:tags" /><category term="newsletter" scheme="searchisko:content:tags" /><author><name>Vlad Mihalcea</name></author><id>searchisko:content:id:jbossorg_blog-hibernate_community_newsletter_13_2018</id><updated>2018-07-09T10:29:18Z</updated><published>2018-07-09T00:00:00Z</published><content type="html">&lt;div id="preamble"&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;Welcome to the Hibernate community newsletter in which we share blog posts, forum, and StackOverflow questions that are especially relevant to our users.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="videos"&gt;&lt;a class="anchor" href="#videos"&gt;&lt;/a&gt;Videos&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;If you are using Spring Boot, you should definitely check out &lt;a href="https://spring.io/blog/2018/06/06/spring-tips-jpa"&gt;this video&lt;/a&gt; from Josh Long where he shares several tips about JPA, Spring, and Hibernate.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="articles"&gt;&lt;a class="anchor" href="#articles"&gt;&lt;/a&gt;Articles&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;When using Hibernate, the impact of JPQL query parsing might be overlooked. However, as explained &lt;a href="https://vladmihalcea.com/hibernate-query-plan-cache/"&gt;in this article&lt;/a&gt;, it is very important to make sure that the Query Cache Plan can handle the vast majority of JPQL and Criteria API queries.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;If you are planning on using Spring Boot with Hibernate ORM and Hibernate Search, then you should definitely read &lt;a href="https://www.javacodegeeks.com/2018/04/spring-hibernate-tutorial.html"&gt;this tutorial&lt;/a&gt;.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;For our Chinese readers, &lt;a href="https://juejin.im/post/5b3ca5386fb9a04fd34370d2"&gt;this article&lt;/a&gt; shows some interesting problems that Lombok can cause when using JPA and Hibernate.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;When using a relational database, most applications rely on the default isolation level, which, most often, is either Read Committed (e.g. Oracle, PostgreSQL, SQL Server) or Repeatable Read (e.g. MySQL, MariaDB). However, none of these default isolation levels can prevent the Phantom Read anomaly. For more details about this phenomenon and how you can prevent it, check out &lt;a href="https://vladmihalcea.com/phantom-read/"&gt;this article&lt;/a&gt;.&lt;/p&gt; &lt;/div&gt; &lt;div class="paragraph"&gt; &lt;p&gt;In &lt;a href="https://medium.com/@paul.klingelhuber/hibernate-dirty-checking-with-converted-attributes-1b6d1cd27f68"&gt;this article&lt;/a&gt;, Paul Klingelhuber explains how entity attributes annotated with &lt;code&gt;@Convert&lt;/code&gt; are handled by the Hibernate dirty checking mechanism.&lt;/p&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="time-to-upgrade"&gt;&lt;a class="anchor" href="#time-to-upgrade"&gt;&lt;/a&gt;Time to upgrade&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="paragraph"&gt; &lt;p&gt;There were several Hibernate project releases since the last newsletter:&lt;/p&gt; &lt;/div&gt; &lt;div class="ulist"&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;&lt;a href="http://in.relation.to/2018/07/05/hibernate-orm-532-final-out/"&gt;Hibernate ORM 5.3.2&lt;/a&gt; and &lt;a href="http://in.relation.to/2018/07/04/hibernate-orm-5115-final-release/"&gt;Hibernate ORM 5.1.15&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="http://in.relation.to/2018/07/05/hibernate-ogm-5-4-Beta2-released/"&gt;Hibernate OGM 5.4.0 Beta2&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class="sect1"&gt; &lt;h2 id="questions-and-answers"&gt;&lt;a class="anchor" href="#questions-and-answers"&gt;&lt;/a&gt;Questions and answers&lt;/h2&gt; &lt;div class="sectionbody"&gt; &lt;div class="ulist"&gt; &lt;ul&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://discourse.hibernate.org/t/org-hibernate-query-query-typed-parameter-recommendations-setparameter-string-object-vs-setparameter-string-object-type/957/2"&gt;&lt;code&gt;org.hibernate.query.Query&lt;/code&gt; typed parameter recommendations: &lt;code&gt;setParameter(String, Object)&lt;/code&gt; vs. &lt;code&gt;setParameter(String, Object, Type)&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://stackoverflow.com/questions/11938253/jpa-joincolumn-vs-mappedby/51055434#51055434"&gt;What’s the difference between` @JoinColumn` and &lt;code&gt;mappedBy&lt;/code&gt; when using a &lt;code&gt;@OneToMany&lt;/code&gt; association&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://stackoverflow.com/questions/4334970/hibernate-cannot-simultaneously-fetch-multiple-bags/51055523#51055523"&gt;Hibernate cannot simultaneously fetch multiple bags&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://stackoverflow.com/questions/1372317/how-do-we-count-rows-using-hibernate/51055670#51055670"&gt;How do we count rows using Hibernate?&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://stackoverflow.com/questions/11746499/solve-failed-to-lazily-initialize-a-collection-of-role-exception/51055820#51055820"&gt;How to solve the “failed to lazily initialize a collection of role” Hibernate exception&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://discourse.hibernate.org/t/postupdateevent-state-oldstate-array-order/975"&gt;What is the order of properties when calling getDirtyProperties from &lt;code&gt;PostUpdateEvent&lt;/code&gt;&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://discourse.hibernate.org/t/jpa-criteriabuilider-custom-join-on-clause/973"&gt;JPA CriteriaBuilider custom JOIN ON clause&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://discourse.hibernate.org/t/how-to-sync-the-manual-entries-for-pk-given-through-any-shell-script-with-those-generated-through-a-hibernate-sequence/1015"&gt;How to sync the manual entries for PK given through any shell script with those generated through a Hibernate sequence&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://stackoverflow.com/questions/9762101/what-is-linearizability/50653833#50653833"&gt;What is “Linearizability”?&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://stackoverflow.com/questions/11043712/what-is-difference-between-non-repeatable-read-and-phantom-read/51123574#51123574" class="bare"&gt;https://stackoverflow.com/questions/11043712/what-is-difference-between-non-repeatable-read-and-phantom-read/51123574#51123574&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://stackoverflow.com/questions/21721818/why-does-hibernate-set-dynamic-insert-false-by-default/43040605#43040605"&gt;hy does Hibernate set dynamic insert=false by default&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://stackoverflow.com/questions/25738569/jpa-map-json-column-to-java-object/47039984#47039984"&gt;JPA map JSON column to Java Object&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://stackoverflow.com/questions/25911359/read-write-splitting-hibernate/26026237#26026237"&gt;Read/Write splitting Hibernate&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;li&gt; &lt;p&gt;&lt;a href="https://stackoverflow.com/questions/27519399/why-is-the-jpa-fetchtype-eager-by-default-for-the-manytoone-relationship/27520593#27520593"&gt;Why is the JPA FetchType &lt;code&gt;EAGER&lt;/code&gt; by default for the &lt;code&gt;@ManyToOne&lt;/code&gt; relationship?&lt;/a&gt;&lt;/p&gt; &lt;/li&gt; &lt;/ul&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/GABgVC9ldIM" height="1" width="1" alt=""/&gt;</content><summary>Welcome to the Hibernate community newsletter in which we share blog posts, forum, and StackOverflow questions that are especially relevant to our users. Videos If you are using Spring Boot, you should definitely check out this video from Josh Long where he shares several tips about JPA, Spring, and Hibernate. Articles When using Hibernate, the impact of JPQL query parsing might be overlooked. How...</summary><dc:creator>Vlad Mihalcea</dc:creator><dc:date>2018-07-09T00:00:00Z</dc:date><feedburner:origLink>http://in.relation.to/2018/07/09/hibernate-community-newsletter-2018-13/</feedburner:origLink></entry><entry><title>How to install Clang/LLVM 5 and GCC 7 on RHEL</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/pWOsCict36o/" /><category term="C" scheme="searchisko:content:tags" /><category term="C++" scheme="searchisko:content:tags" /><category term="clang" scheme="searchisko:content:tags" /><category term="Clang/LLVM" scheme="searchisko:content:tags" /><category term="compilers" scheme="searchisko:content:tags" /><category term="Developer Tools" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="gcc" scheme="searchisko:content:tags" /><category term="GCC compiler collection" scheme="searchisko:content:tags" /><category term="GCC7" scheme="searchisko:content:tags" /><category term="GNU Compiler Collection" scheme="searchisko:content:tags" /><category term="Red Hat Enterprise Linux" scheme="searchisko:content:tags" /><category term="rhel" scheme="searchisko:content:tags" /><category term="RHSCL" scheme="searchisko:content:tags" /><category term="software collections" scheme="searchisko:content:tags" /><author><name>Rob Terzi</name></author><id>searchisko:content:id:jbossorg_blog-how_to_install_clang_llvm_5_and_gcc_7_on_rhel</id><updated>2018-07-07T15:59:28Z</updated><published>2018-07-07T15:59:28Z</published><content type="html">&lt;p&gt;If you are developing with C/C++, Clang tools and newer versions of GCC can be quite helpful for checking your code and giving you &lt;a href="https://developers.redhat.com/blog/2017/03/10/wimplicit-fallthrough-in-gcc-7/"&gt;better warnings&lt;/a&gt; and error messages to help avoid bugs. The newer compilers have better optimizations and code generation.&lt;/p&gt; &lt;p&gt;You can easily install the latest-supported Clang and GCC compilers for C, C++, Objective-C, and FORTRAN using &lt;code&gt;yum&lt;/code&gt; on Red Hat Enterprise Linux.  These compilers are available as software collections that are typically updated twice a year. The &lt;a href="https://developers.redhat.com/blog/2018/05/03/announcing-ga-for-latest-software-collections-developer-toolset-compilers/"&gt;May 2018 update&lt;/a&gt; included Clang/LLVM 5 and GCC 7.3, as well as Go and Rust.&lt;/p&gt; &lt;p&gt;If you want your default &lt;code&gt;gcc&lt;/code&gt; to always be GCC 7, or you want &lt;code&gt;clang&lt;/code&gt; to always be in your path, this article shows how to permanently enable a software collection by adding it to the profile (dot files) for your user account. A number of common questions about software collections are also answered.&lt;span id="more-505107"&gt;&lt;/span&gt;&lt;/p&gt; &lt;h2&gt;TL;DR&lt;/h2&gt; &lt;pre class="brush: plain; title: ; notranslate"&gt; $ su - # subscription-manager repos --enable rhel-7-server-optional-rpms \ --enable rhel-server-rhscl-7-rpms \ --enable rhel-7-server-devtools-rpms \ # yum install devtoolset-7 llvm-toolset-7 # yum install llvm-toolset-7-clang-analyzer llvm-toolset-7-clang-tools-extra # optional # exit $ scl enable devtoolset-7 llvm-toolset-7 bash $ gcc --version gcc (GCC) 7.3.1 20180303 (Red Hat 7.3.1-5) $ clang --version clang version 5.0.1 (tags/RELEASE_501/final) &lt;/pre&gt; &lt;p&gt;&amp;#160;&lt;/p&gt; &lt;h2&gt;About software collections&lt;/h2&gt; &lt;p&gt;Using software collections takes an extra step because you have to enable the collection you want to use. Enabling just adds the necessary paths (&lt;code&gt;PATH&lt;/code&gt;, &lt;code&gt;MANPATH&lt;/code&gt;, &lt;code&gt;LD_LIBRARY_PATH&lt;/code&gt;) to your environment. Once you get the hang of it, they are pretty ease to use. It really helps to understand the way that environment variable changes work in Linux/UNIX. Changes can only be made to the current process. When a child process is created it inherits the environment of the parent. Any environment changes made in the parent after the child has been created will have no effect on the child.&lt;/p&gt; &lt;p&gt;The benefit of software collections is that you can have GCC 5, 6, 7 installed at the same time along with the base GCC 4 that shipped with Red Hat Enterprise Linux. You can easily switch between versions with &lt;code&gt;scl enable&lt;/code&gt;.  Note: The latest interpreted languages like Python 3, PHP 7, and Ruby 2.5 are also available via Red Hat Software Collections. The .NET Core packages that include the C# compiler are also distributed as software collections. So you should take the time to get comfortable with software collections.&lt;/p&gt; &lt;p&gt;&amp;#160;&lt;/p&gt; &lt;h2&gt;Enable repos with additional developer tools&lt;/h2&gt; &lt;p&gt;While the default/base Red Hat Enterprise Linux software repos have a lot of development tools, these are the older versions that are shipped with the OS and are supported for the full 10-year life of the OS. Packages that are updated more frequently and have a different support life cycle are distributed in other repos that aren&amp;#8217;t enabled by default.&lt;/p&gt; &lt;p&gt;To enable the additional repos, run the following command as the root user:&lt;/p&gt; &lt;pre class="brush: plain; title: ; notranslate"&gt; $ su - # subscription-manager repos --enable rhel-7-server-optional-rpms \ --enable rhel-server-rhscl-7-rpms \ --enable rhel-7-server-devtools-rpms \ &lt;/pre&gt; &lt;p&gt;Notes:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;You can enter the above all on one line &lt;strong&gt;without the backslashes&lt;/strong&gt;.  The backslashes are needed if you want to use multiple lines for readability.&lt;/li&gt; &lt;li&gt;If you are using the &lt;em&gt;workstation&lt;/em&gt; variant of Red Hat Enterprise Linux, change &lt;code&gt;-server-&lt;/code&gt; to &lt;code&gt;-workstation-&lt;/code&gt;.&lt;/li&gt; &lt;li&gt;This command only needs to be run once.  The repos will stay enabled.  All of the enabled repos will be searched by &lt;code&gt;yum&lt;/code&gt; when installing or updating software.&lt;/li&gt; &lt;li&gt;The &lt;a href="https://developers.redhat.com/articles/frequently-asked-questions-no-cost-red-hat-enterprise-linux-developer-subscription/"&gt;No-cost Red Hat Enterprise Linux subscription for developers&lt;/a&gt; includes access to all of these repos and the &lt;em&gt;server&lt;/em&gt; variant of Red Hat Enterprise Linux.  The &lt;em&gt;server&lt;/em&gt; variant is a superset.&lt;/li&gt; &lt;li&gt;For more information, see the &lt;a href="https://developers.redhat.com/articles/frequently-asked-questions-no-cost-red-hat-enterprise-linux-developer-subscription/"&gt;FAQ for the No-cost subscription&lt;/a&gt;.&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;To see which repos are available for your current subscription, run the following command:&lt;/p&gt; &lt;pre class="brush: plain; title: ; notranslate"&gt; # subscription-manager repos --list &lt;/pre&gt; &lt;p&gt;To see which repos are enabled, use &lt;code&gt;--list-enabled&lt;/code&gt;:&lt;/p&gt; &lt;pre class="brush: plain; title: ; notranslate"&gt; # subscription-manager repos --list-enabled &lt;/pre&gt; &lt;p&gt;&amp;#160;&lt;/p&gt; &lt;h2&gt;Install GCC 7 and Clang/LLVM 5&lt;/h2&gt; &lt;p&gt;You can install GCC 7 and Clang/LLVM 5 with one command:&lt;/p&gt; &lt;pre class="brush: plain; title: ; notranslate"&gt; # yum install devtoolset-7 llvm-toolset-7 &lt;/pre&gt; &lt;p&gt;Notes:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;If you only want to install GCC 7, install just &lt;code&gt;devtoolset-7&lt;/code&gt;.&lt;/li&gt; &lt;li&gt;If you only want to install Clang/LLVM 5, install just &lt;code&gt;llvmtoolset-7&lt;/code&gt;.&lt;/li&gt; &lt;li&gt;These packages will install in &lt;code&gt;/opt/rh&lt;/code&gt;.&lt;/li&gt; &lt;li&gt;They will not be added to your path until you do an &lt;code&gt;scl enable&lt;/code&gt;.  See below.&lt;/li&gt; &lt;/ul&gt; &lt;h3&gt;View additional packages, see other available versions&lt;/h3&gt; &lt;p&gt;You can use &lt;code&gt;yum search&lt;/code&gt; to search for additional packages and see the other versions are are available:&lt;/p&gt; &lt;p&gt;GCC:&lt;/p&gt; &lt;pre class="brush: plain; title: ; notranslate"&gt; # yum search devtoolset &lt;/pre&gt; &lt;p&gt;Clang/LLVM:&lt;/p&gt; &lt;pre class="brush: plain; title: ; notranslate"&gt; # yum search llvm-toolset &lt;/pre&gt; &lt;p&gt;If you&amp;#8217;d like to install Clang&amp;#8217;s static analysis tools &lt;code&gt;scan-build&lt;/code&gt; and &lt;code&gt;clang-tidy&lt;/code&gt;, run the following command:&lt;/p&gt; &lt;pre class="brush: plain; title: ; notranslate"&gt; # yum install llvm-toolset-7-clang-analyzer llvm-toolset-7-clang-tools-extra &lt;/pre&gt; &lt;p&gt;&amp;#160;&lt;/p&gt; &lt;h2&gt;How to install the Eclipse IDE with C/C++ Development Tooling&lt;/h2&gt; &lt;p&gt;Red Hat Developer Tools includes the Eclipse IDE with C/C++ Development Tooling (CDT).  The version as of the May 2018 update is  4.7.3 Oxygen.  To install the IDE, run the following command:&lt;/p&gt; &lt;pre class="brush: plain; title: ; notranslate"&gt; # yum install rh-eclipse47 &lt;/pre&gt; &lt;p&gt;As above, if you want to search for additional packages, or see the other versions that are available, you can use &lt;code&gt;yum search&lt;/code&gt;. There are a lot of Eclipse packages, so you might want to redirect the output to a file and then use &lt;code&gt;grep&lt;/code&gt;, &lt;code&gt;less&lt;/code&gt;, or your favorite text editor.&lt;/p&gt; &lt;pre class="brush: plain; title: ; notranslate"&gt; # yum search rh-eclipse &lt;/pre&gt; &lt;p&gt;&amp;#160;&lt;/p&gt; &lt;h2&gt;How to use GCC 7 or Clang (scl enable)&lt;/h2&gt; &lt;p&gt;GCC 7 and Clang/LLVM 5 are now installed. You no longer need to run under the root user ID. The rest of the commands should be executed using your normal user account.&lt;/p&gt; &lt;p&gt;As previously mentioned, software collections are installed under &lt;code&gt;/opt/rh&lt;/code&gt; and aren&amp;#8217;t automatically added to your &lt;code&gt;PATH&lt;/code&gt;, &lt;code&gt;MANPATH&lt;/code&gt;, and &lt;code&gt;LD_LIBRARY_PATH&lt;/code&gt;. The command &lt;code&gt;scl enable&lt;/code&gt; will make the necessary changes and run a command. Because of the way environment variables work in Linux (and UNIX), the changes will only take affect for the command run by &lt;code&gt;scl enable&lt;/code&gt;. You can use &lt;code&gt;bash&lt;/code&gt; as the command to start an interactive session. This is one of the most common ways (but not the only way) of working with software collections.&lt;/p&gt; &lt;pre class="brush: plain; title: ; notranslate"&gt; $ scl enable devtoolset-7 bash $ gcc --version gcc (GCC) 7.3.1 20180303 (Red Hat 7.3.1-5) &lt;/pre&gt; &lt;p&gt;You can use the &lt;code&gt;which&lt;/code&gt; command to see where &lt;code&gt;gcc&lt;/code&gt; is found in your &lt;code&gt;PATH&lt;/code&gt;.  Note: Once you exit out of the bash shell that was started by &lt;code&gt;scl enable&lt;/code&gt;, you will revert to your original &lt;code&gt;PATH&lt;/code&gt;, which no longer has the software collection in it:&lt;/p&gt; &lt;pre class="brush: plain; title: ; notranslate"&gt; $ which gcc /opt/rh/devtoolset-7/root/usr/bin/gcc $ exit $ which gcc /usr/bin/gcc $ gcc --version gcc (GCC) 4.8.5 20150623 (Red Hat 4.8.5-28) &lt;/pre&gt; &lt;p&gt;For Clang/LLVM, use &lt;code&gt;llvm-toolset-7&lt;/code&gt; as the collection to enable:&lt;/p&gt; &lt;pre class="brush: plain; title: ; notranslate"&gt; $ scl enable llvm-toolset-7 bash $ clang --version clang version 5.0.1 (tags/RELEASE_501/final) $ which clang /opt/rh/llvm-toolset-7/root/usr/bin/clang &lt;/pre&gt; &lt;p&gt;You can also enable both collections at the same time. The order will determine the order for the directories in the PATH. If there are any commands that are in both collections, the last collection added will take precedence.&lt;/p&gt; &lt;pre class="brush: plain; title: ; notranslate"&gt; $ scl enable devtoolset-7 llvm-toolset-7 bash $ echo $PATH /opt/rh/llvm-toolset-7/root/usr/bin:/opt/rh/llvm-toolset-7/root/usr/sbin:/opt/rh/devtoolset-7/root/usr/bin:/usr/local/bin:/bin:/usr/bin:/usr/local/sbin:/usr/sbin &lt;/pre&gt; &lt;p&gt;&amp;#160;&lt;/p&gt; &lt;h2&gt;How to permanently enable a software collection&lt;/h2&gt; &lt;p&gt;To permanently enable GCC 7 and/or Clang/LLVM 5, you can add an &lt;code&gt;scl_source&lt;/code&gt; command to the &amp;#8220;dot files&amp;#8221; for your specific user ID. This is the recommend approach for development, as only processes that run under your user ID will be affected.  If you are using a graphical desktop, anything that you start from the menu will already have the collection enabled.&lt;/p&gt; &lt;p&gt;Using your preferred text editor, add the following line to your &lt;code&gt;~/.bashrc&lt;/code&gt;:&lt;/p&gt; &lt;pre class="brush: plain; title: ; notranslate"&gt; # Add Red Hat Developer Toolset (GCC 7) to my login environment source scl_source enable devtoolset-7 &lt;/pre&gt; &lt;p&gt;Note: you could also add the line to the start of a build script to select the desired compiler for the build.  If your build script isn&amp;#8217;t written as a shell/bash script you could just wrap it in a shell script that has the &lt;code&gt;source scl_source &lt;em&gt;collection-name&lt;/em&gt;&lt;/code&gt; command and then runs your build script.&lt;/p&gt; &lt;p&gt;A caveat with permanently enabling a software collection is that there is no disable command. Everything is in environment variables, so you can work around it, but it would be a manual process.&lt;/p&gt; &lt;p&gt;&amp;#160;&lt;/p&gt; &lt;h2&gt;But I need GCC 6, how do I install it?&lt;/h2&gt; &lt;p&gt;If you need GCC 6 instead of GCC 7, you can follow these same instructions.  Installing &lt;code&gt;devtoolset-6&lt;/code&gt; will install GCC 6.3.&lt;/p&gt; &lt;p&gt;Note: There is no &lt;code&gt;devtoolset-5&lt;/code&gt;. GCC 5 was included in &lt;code&gt;devtoolset-4&lt;/code&gt;, which you could also install if needed. The version number was bumped to 6, skipping 5, in order to sync with GCC major versions.&lt;/p&gt; &lt;p&gt;Using software collections you can have GCC 4, 5, 6, and 7 all installed at the same time and easily switch between them.&lt;/p&gt; &lt;p&gt;&amp;#160;&lt;/p&gt; &lt;h2&gt;How to look at the manual page for a specific version&lt;/h2&gt; &lt;p&gt;Enabling a software collection will prepend that software collection&amp;#8217;s manual pages to the &lt;code&gt;MANPATH&lt;/code&gt;, which is the search path for manual pages. Just like commands, any existing manual pages in later directories with the same name will be hidden.  This is one of the times when it can be useful to run a single command, like &lt;code&gt;man&lt;/code&gt; with &lt;code&gt;scl enable&lt;/code&gt;, instead of starting a bash shell.&lt;/p&gt; &lt;pre class="brush: plain; title: ; notranslate"&gt; $ scl enable devtoolset-7 man gcc # see the GCC-7 man page $ scl enable devtoolset-6 man gcc # see the GCC-6 man page &lt;/pre&gt; &lt;p&gt;Since there is no disable command, you need a work around to see the man page for GCC-4:&lt;/p&gt; &lt;pre class="brush: plain; title: ; notranslate"&gt; $ (MANPATH=/usr/share/man &amp;#38;&amp;#38; man gcc) &lt;/pre&gt; &lt;p&gt;The above command just changes &lt;code&gt;MANPATH&lt;/code&gt; in a subshell so it won&amp;#8217;t affect anything else.&lt;/p&gt; &lt;p&gt;Note: The same techniques will work for other commands like GNU &lt;code&gt;info&lt;/code&gt; and &lt;code&gt;INFOPATH&lt;/code&gt;.&lt;/p&gt; &lt;p&gt;&amp;#160;&lt;/p&gt; &lt;h2&gt;How to see which software collections are installed&lt;/h2&gt; &lt;p&gt;You can use the command &lt;code&gt;scl -l&lt;/code&gt; to see what software collections are installed.  This will show all software collections that are installed, whether they are enabled or not.&lt;/p&gt; &lt;pre class="brush: bash; title: ; notranslate"&gt; $ scl -l devtoolset-7 llvm-toolset-7 rh-python36 &lt;/pre&gt; &lt;p&gt;&amp;#160;&lt;/p&gt; &lt;h2&gt;How to tell which software collections are enabled&lt;/h2&gt; &lt;p&gt;The environment variable &lt;code&gt;X_SCLS&lt;/code&gt; contains a list of the software collections that are currently enabled. This is handy to use in shell scripts.&lt;/p&gt; &lt;pre class="brush: bash; title: ; notranslate"&gt; $ echo $X_SCLS $ for scl in $X_SCLS; do echo $scl; done llvm-toolset-7 devtoolset-7 &lt;/pre&gt; &lt;p&gt;&amp;#160;&lt;/p&gt; &lt;h2&gt;Compiler tips&lt;/h2&gt; &lt;p&gt;There are a number of helpful articles on the Red Hat Developer blog:&lt;/p&gt; &lt;h3&gt;Getting started with Clang/LLVM&lt;/h3&gt; &lt;p&gt;See &lt;a title="Tom Stellard" href="https://developers.redhat.com/blog/author/tstellard/"&gt;Tom Stellard&lt;/a&gt;&amp;#8216;s article:&lt;/p&gt; &lt;blockquote class="wp-embedded-content" data-secret="Whnk10MCiR"&gt;&lt;p&gt;&lt;a href="https://developers.redhat.com/blog/2017/11/01/getting-started-llvm-toolset/"&gt;Getting started with llvm-toolset&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt; &lt;p&gt;&lt;iframe class="wp-embedded-content" sandbox="allow-scripts" security="restricted" src="https://developers.redhat.com/blog/2017/11/01/getting-started-llvm-toolset/embed/#?secret=Whnk10MCiR" data-secret="Whnk10MCiR" width="600" height="338" title="&amp;#8220;Getting started with llvm-toolset&amp;#8221; &amp;#8212; RHD Blog" frameborder="0" marginwidth="0" marginheight="0" scrolling="no"&gt;&lt;/iframe&gt;&lt;/p&gt; &lt;h3&gt;Recommended compiler and linker flags for GCC&lt;/h3&gt; &lt;p&gt;See &lt;a title="Florian Weimer" href="https://developers.redhat.com/blog/author/florianweimer/"&gt;Florian Weimer&lt;/a&gt;&amp;#8216;s article&lt;i&gt;:&lt;/i&gt;&lt;/p&gt; &lt;blockquote class="wp-embedded-content" data-secret="1BcB95WtOv"&gt;&lt;p&gt;&lt;a href="https://developers.redhat.com/blog/2018/03/21/compiler-and-linker-flags-gcc/"&gt;Recommended compiler and linker flags for GCC&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt; &lt;p&gt;&lt;iframe class="wp-embedded-content" sandbox="allow-scripts" security="restricted" src="https://developers.redhat.com/blog/2018/03/21/compiler-and-linker-flags-gcc/embed/#?secret=1BcB95WtOv" data-secret="1BcB95WtOv" width="600" height="338" title="&amp;#8220;Recommended compiler and linker flags for GCC&amp;#8221; &amp;#8212; RHD Blog" frameborder="0" marginwidth="0" marginheight="0" scrolling="no"&gt;&lt;/iframe&gt;&lt;/p&gt; &lt;p&gt;&amp;#160;&lt;/p&gt; &lt;h3&gt;Implicit fall through detection with GCC 7&lt;/h3&gt; &lt;p&gt;&lt;a title="Marek Polacek" href="https://developers.redhat.com/blog/author/rhpolacek/"&gt;Marek Polacek&lt;/a&gt;&amp;#8216;s article describes a GCC 7 warning you can enable to detect missing break statements inside of a switch block. The warning is enabled with &lt;code&gt;-Wimplicit-fallthrough&lt;/code&gt;.  It is also one of the warnings that will be enabled if you use &lt;code&gt;-Wextra&lt;/code&gt;.&lt;/p&gt; &lt;blockquote class="wp-embedded-content" data-secret="LPk95h8ySL"&gt;&lt;p&gt;&lt;a href="https://developers.redhat.com/blog/2017/03/10/wimplicit-fallthrough-in-gcc-7/"&gt;-Wimplicit-fallthrough in GCC 7&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt; &lt;p&gt;&lt;iframe class="wp-embedded-content" sandbox="allow-scripts" security="restricted" src="https://developers.redhat.com/blog/2017/03/10/wimplicit-fallthrough-in-gcc-7/embed/#?secret=LPk95h8ySL" data-secret="LPk95h8ySL" width="600" height="338" title="&amp;#8220;-Wimplicit-fallthrough in GCC 7&amp;#8221; &amp;#8212; RHD Blog" frameborder="0" marginwidth="0" marginheight="0" scrolling="no"&gt;&lt;/iframe&gt;&lt;/p&gt; &lt;h3&gt;&lt;/h3&gt; &lt;h3&gt;Memory error detection using GCC 7&lt;/h3&gt; &lt;p&gt;See &lt;a title="Martin Sebor" href="https://developers.redhat.com/blog/author/msebor/"&gt;Martin Sebor&amp;#8217;s&lt;/a&gt; article:&lt;/p&gt; &lt;blockquote class="wp-embedded-content" data-secret="ZB49q9fk5k"&gt;&lt;p&gt;&lt;a href="https://developers.redhat.com/blog/2017/02/22/memory-error-detection-using-gcc/"&gt;Memory Error Detection Using GCC&lt;/a&gt;&lt;/p&gt;&lt;/blockquote&gt; &lt;p&gt;&lt;iframe class="wp-embedded-content" sandbox="allow-scripts" security="restricted" src="https://developers.redhat.com/blog/2017/02/22/memory-error-detection-using-gcc/embed/#?secret=ZB49q9fk5k" data-secret="ZB49q9fk5k" width="600" height="338" title="&amp;#8220;Memory Error Detection Using GCC&amp;#8221; &amp;#8212; RHD Blog" frameborder="0" marginwidth="0" marginheight="0" scrolling="no"&gt;&lt;/iframe&gt;&lt;/p&gt; &lt;p&gt;&amp;#160;&lt;/p&gt; &lt;p&gt;&amp;#160;&lt;/p&gt; &lt;p&gt;&amp;#160;&lt;/p&gt; &lt;h2&gt;Product information and documentation&lt;/h2&gt; &lt;p&gt;For information and documentation about these Red Hat products:&lt;/p&gt; &lt;ul&gt; &lt;li&gt;GCC: &lt;a href="https://developers.redhat.com/products/developertoolset/overview/"&gt;Red Hat Developer Toolset&lt;/a&gt;&lt;/li&gt; &lt;li&gt;Clang/LLVM, Go, and Rust Compilers: &lt;a href="https://developers.redhat.com/products/clang-llvm-go-rust/overview"&gt;Red Hat Developer Tools&lt;/a&gt;&lt;/li&gt; &lt;li&gt;Dynamic languages and many other updated packages: &lt;a href="https://developers.redhat.com/products/softwarecollections/overview/"&gt;Red Hat Software Collections&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&amp;#160;&lt;/p&gt; &lt;h2&gt;Upstream community documentation&lt;/h2&gt; &lt;ul&gt; &lt;li&gt;&lt;a href="https://gcc.gnu.org/gcc-7/changes.html"&gt;What&amp;#8217;s new in the GCC 7 release series&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="https://clang.llvm.org/index.html"&gt;Clang.llvm.org&lt;/a&gt; &amp;#8211; Clang pages on the LLVM project site&lt;/li&gt; &lt;li&gt;&lt;a href="http://releases.llvm.org/5.0.2/tools/clang/docs/ReleaseNotes.html"&gt;Clang 5.0 Release Notes&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a href="http://releases.llvm.org/5.0.1/docs/ReleaseNotes.html"&gt;LLVM 5.0 Release Notes&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;p&gt;&amp;#160;&lt;/p&gt; &lt;p&gt;&amp;#160;&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F07%2Fyum-install-gcc7-clang%2F&amp;#38;linkname=How%20to%20install%20Clang%2FLLVM%205%20and%20GCC%207%20on%20RHEL" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F07%2Fyum-install-gcc7-clang%2F&amp;#38;linkname=How%20to%20install%20Clang%2FLLVM%205%20and%20GCC%207%20on%20RHEL" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F07%2Fyum-install-gcc7-clang%2F&amp;#38;linkname=How%20to%20install%20Clang%2FLLVM%205%20and%20GCC%207%20on%20RHEL" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F07%2Fyum-install-gcc7-clang%2F&amp;#38;linkname=How%20to%20install%20Clang%2FLLVM%205%20and%20GCC%207%20on%20RHEL" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F07%2Fyum-install-gcc7-clang%2F&amp;#38;linkname=How%20to%20install%20Clang%2FLLVM%205%20and%20GCC%207%20on%20RHEL" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F07%2Fyum-install-gcc7-clang%2F&amp;#38;linkname=How%20to%20install%20Clang%2FLLVM%205%20and%20GCC%207%20on%20RHEL" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F07%2Fyum-install-gcc7-clang%2F&amp;#38;linkname=How%20to%20install%20Clang%2FLLVM%205%20and%20GCC%207%20on%20RHEL" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F07%2Fyum-install-gcc7-clang%2F&amp;#38;linkname=How%20to%20install%20Clang%2FLLVM%205%20and%20GCC%207%20on%20RHEL" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F07%2Fyum-install-gcc7-clang%2F&amp;#38;title=How%20to%20install%20Clang%2FLLVM%205%20and%20GCC%207%20on%20RHEL" data-a2a-url="https://developers.redhat.com/blog/2018/07/07/yum-install-gcc7-clang/" data-a2a-title="How to install Clang/LLVM 5 and GCC 7 on RHEL"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/07/07/yum-install-gcc7-clang/"&gt;How to install Clang/LLVM 5 and GCC 7 on RHEL&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/pWOsCict36o" height="1" width="1" alt=""/&gt;</content><summary>If you are developing with C/C++, Clang tools and newer versions of GCC can be quite helpful for checking your code and giving you better warnings and error messages to help avoid bugs. The newer compilers have better optimizations and code generation. You can easily install the latest-supported Clang and GCC compilers for C, C++, Objective-C, and FORTRAN using yum on Red Hat Enterprise Linux.  Th...</summary><dc:creator>Rob Terzi</dc:creator><dc:date>2018-07-07T15:59:28Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2018/07/07/yum-install-gcc7-clang/</feedburner:origLink></entry><entry><title>Fuse - Contract First API Design with Apicurio and Fuse/Camel - Part One</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/iepacLcsmAo/fuse-contract-first-api-design-with.html" /><category term="API" scheme="searchisko:content:tags" /><category term="Design First" scheme="searchisko:content:tags" /><category term="feed_group_name_global" scheme="searchisko:content:tags" /><category term="feed_name_christinalineng" scheme="searchisko:content:tags" /><category term="FUSE" scheme="searchisko:content:tags" /><category term="Red Hat Fuse" scheme="searchisko:content:tags" /><author><name>Christina Lin</name></author><id>searchisko:content:id:jbossorg_blog-fuse_contract_first_api_design_with_apicurio_and_fuse_camel_part_one</id><updated>2018-07-12T13:29:07Z</updated><published>2018-07-05T17:46:00Z</published><content type="html">This is part one of my two-article series that demonstrates the approach of implementing contract-first API design using&amp;nbsp;&lt;a href="https://www.apicur.io/"&gt;Apicurio&lt;/a&gt;and&amp;nbsp;&lt;a href="https://www.redhat.com/en/technologies/jboss-middleware/fuse"&gt;Red Hat Fuse&lt;/a&gt;.&lt;br /&gt;&lt;br /&gt;It covers how to create an OpenAPI standard document as the contract between API providers and consumers using&amp;nbsp;Apicurio. It also shows how to quickly create mock tests using Red Hat Fuse.&lt;br /&gt;&lt;br /&gt;There are two common approaches of creating these APIs.&lt;br /&gt;&lt;ul&gt;&lt;li&gt;Code First&lt;/li&gt;&lt;li&gt;Contract First&lt;/li&gt;&lt;/ul&gt;&lt;div&gt;Coming from a old time ESB developer, these are not new. We have been doing this forever. Before, it was the WSDL that define the contract of the service. we were doing a lot more code first, for me it's simply because it's much easier for me to write couple of Java classes and generate the WSDL for my consumer.&amp;nbsp;&lt;/div&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://4.bp.blogspot.com/-xn1vGjSAAnE/WzqGGNtRwcI/AAAAAAAAFkw/5QNFPyU4AJ4-8S8X8xjwHLL4aEjfA_B3QCLcBGAs/s1600/Screen%2BShot%2B2018-07-03%2Bat%2B4.07.01%2BAM.png" imageanchor="1" style="clear: left; float: left; margin-bottom: 1em; margin-right: 1em;"&gt;&lt;img border="0" data-original-height="1081" data-original-width="1600" height="270" src="https://4.bp.blogspot.com/-xn1vGjSAAnE/WzqGGNtRwcI/AAAAAAAAFkw/5QNFPyU4AJ4-8S8X8xjwHLL4aEjfA_B3QCLcBGAs/s400/Screen%2BShot%2B2018-07-03%2Bat%2B4.07.01%2BAM.png" width="400" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;It's often pretty straightforward if the consumer of your application has finalized how they want the service to be like. But you and I all know this is not often the case. So I had to go back to my code, and make the changes accordingly and pray I did not break anything in the way.&lt;br /&gt;&lt;br /&gt;Of course there is always preliminary discussion, but small changes are inevitable, and it's taking the toll of developer to&amp;nbsp;grind through the process of getting everything right.&lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="https://1.bp.blogspot.com/-yveltlUuzW4/WzqLuvxMhrI/AAAAAAAAFk8/SbjUNBZ3udIGlMkTSlITPhSqKUT3N6AHgCLcBGAs/s1600/Screen%2BShot%2B2018-07-03%2Bat%2B4.31.35%2BAM.png" imageanchor="1" style="clear: right; float: right; margin-bottom: 1em; margin-left: 1em;"&gt;&lt;img border="0" data-original-height="894" data-original-width="1600" height="222" src="https://1.bp.blogspot.com/-yveltlUuzW4/WzqLuvxMhrI/AAAAAAAAFk8/SbjUNBZ3udIGlMkTSlITPhSqKUT3N6AHgCLcBGAs/s400/Screen%2BShot%2B2018-07-03%2Bat%2B4.31.35%2BAM.png" width="400" /&gt;&lt;/a&gt;&lt;/div&gt;Thanks to the new OpenAPI Specification, business user, citizen user/developer can use it to negotiate and maybe rung a couple of pre-test with the consumer before it gets handed over to developer. This design approach is called Contract First. It has become more and more popular as it avoids developer wasting time while in the process of negotiating how the service should be provided.&lt;br /&gt;&lt;br /&gt;Obviously there are many ways to do Contract First API . I am going to demonstrate how this can be done using&amp;nbsp;Apicurio and Fuse. I will be using&amp;nbsp;Apicurio to define APIs, and automatically generates the Fuse project for quick testing purpose.&lt;br /&gt;&lt;br /&gt;&lt;h4&gt;&lt;b&gt;&lt;span style="font-size: large;"&gt;Theme: Customer Service API&lt;/span&gt;&lt;/b&gt;&lt;/h4&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://1.bp.blogspot.com/-XTDagvBT42k/Wztx7K9XbJI/AAAAAAAAFlM/JqqlHpz7vXA2rKSZZz5eOckSRnVq7NnWACK4BGAYYCw/s1600/Screen%2BShot%2B2018-07-03%2Bat%2B8.03.27%2BAM.png" imageanchor="1" style="clear: left; float: left; margin-bottom: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="196" src="https://1.bp.blogspot.com/-XTDagvBT42k/Wztx7K9XbJI/AAAAAAAAFlM/JqqlHpz7vXA2rKSZZz5eOckSRnVq7NnWACK4BGAYYCw/s400/Screen%2BShot%2B2018-07-03%2Bat%2B8.03.27%2BAM.png" width="400" /&gt;&lt;/a&gt;&lt;/div&gt;We will be providing customer service to our consumer. For the sake of this demo, we will only start with retrieving and creating customer service.&lt;br /&gt;&lt;br /&gt;Defining Application with OpenAPI Specification in Apicurio&lt;br /&gt;&lt;br /&gt;Apicurio is a web-based Open Source tool to design OpenAPI specification. Go to&amp;nbsp;&lt;a href="https://www.apicur.io/"&gt;https://www.apicur.io/&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;If you don't already have an account, please register for one.&lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://1.bp.blogspot.com/-ChQnfK46nzg/WztygyxYt2I/AAAAAAAAFlY/HU51E1gVIqoI1M2OhSgj30wRDV4SsU0BACK4BGAYYCw/s1600/Screen%2BShot%2B2018-07-03%2Bat%2B8.03.42%2BAM.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="192" src="https://1.bp.blogspot.com/-ChQnfK46nzg/WztygyxYt2I/AAAAAAAAFlY/HU51E1gVIqoI1M2OhSgj30wRDV4SsU0BACK4BGAYYCw/s640/Screen%2BShot%2B2018-07-03%2Bat%2B8.03.42%2BAM.png" width="640" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;After registering, you will be redirected to the main page of &lt;b&gt;Apicurio&lt;/b&gt;, so after discussing with the consumer on what they wish to have for the customer service, we can start creating the contract by clicking on "&lt;b&gt;Create New API&lt;/b&gt;".&lt;br /&gt;&lt;b&gt;&lt;br /&gt;&lt;/b&gt;&lt;a href="http://2.bp.blogspot.com/-PwRajchevj0/WztyzBw4vQI/AAAAAAAAFlk/YafjXYkrJL0t46mWjImoox8IoAe37u2zACK4BGAYYCw/s1600/Screen%2BShot%2B2018-07-03%2Bat%2B8.06.13%2BAM.png" imageanchor="1"&gt;&lt;img border="0" height="332" src="https://2.bp.blogspot.com/-PwRajchevj0/WztyzBw4vQI/AAAAAAAAFlk/YafjXYkrJL0t46mWjImoox8IoAe37u2zACK4BGAYYCw/s640/Screen%2BShot%2B2018-07-03%2Bat%2B8.06.13%2BAM.png" width="640" /&gt;&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;Basically, what you need to do is pretty simple&lt;br /&gt;&lt;br /&gt;&lt;ul&gt;&lt;li&gt;&lt;b&gt;Create the API(Service)&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;Create the data definitions (if any)&amp;nbsp;&lt;/b&gt;&lt;/li&gt;&lt;li&gt;&lt;b&gt;Add Paths, and define parameters, operations and return responses to the path&lt;/b&gt;&lt;/li&gt;&lt;/ul&gt;&lt;br /&gt;Enter the name of the service, and would be nice to add some of the description to it so it's easier for people to pick up what everything means.&lt;br /&gt;&lt;br /&gt;&lt;a href="http://1.bp.blogspot.com/-nYGSbZRAjac/WzuWDhWRC8I/AAAAAAAAFpI/jzK4uncQ8FgXzCIj-K9Dc3oBgIhb8pRNgCK4BGAYYCw/s1600/Screen%2BShot%2B2018-07-03%2Bat%2B11.27.59%2BAM.png" imageanchor="1"&gt;&lt;img border="0" height="158" src="https://1.bp.blogspot.com/-nYGSbZRAjac/WzuWDhWRC8I/AAAAAAAAFpI/jzK4uncQ8FgXzCIj-K9Dc3oBgIhb8pRNgCK4BGAYYCw/s640/Screen%2BShot%2B2018-07-03%2Bat%2B11.27.59%2BAM.png" width="640" /&gt;&lt;/a&gt;&lt;br /&gt;&lt;div&gt;Set the customer definition, show the detail of info we are going exchange.&amp;nbsp;&lt;/div&gt;&lt;br /&gt;&lt;a href="http://3.bp.blogspot.com/-lYJT8fTF56E/Wzt220wWDjI/AAAAAAAAFmI/26TUka6CyPcZfen6tCUQX-Zu1zVuC911gCK4BGAYYCw/s1600/Screen%2BShot%2B2018-07-03%2Bat%2B8.11.25%2BAM.png" imageanchor="1"&gt;&lt;img border="0" height="216" src="https://3.bp.blogspot.com/-lYJT8fTF56E/Wzt220wWDjI/AAAAAAAAFmI/26TUka6CyPcZfen6tCUQX-Zu1zVuC911gCK4BGAYYCw/s640/Screen%2BShot%2B2018-07-03%2Bat%2B8.11.25%2BAM.png" width="640" /&gt;&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;Add and define the properties and their data type.&lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://1.bp.blogspot.com/-abCM_73sxto/Wzt4Kg7FnpI/AAAAAAAAFmU/qJbyWPUwf2sZKQfTYjPuI8p1aqXDGo3iwCK4BGAYYCw/s1600/Screen%2BShot%2B2018-07-03%2Bat%2B8.24.36%2BAM.png" imageanchor="1" style="clear: left; float: left; margin-bottom: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="178" src="https://1.bp.blogspot.com/-abCM_73sxto/Wzt4Kg7FnpI/AAAAAAAAFmU/qJbyWPUwf2sZKQfTYjPuI8p1aqXDGo3iwCK4BGAYYCw/s640/Screen%2BShot%2B2018-07-03%2Bat%2B8.24.36%2BAM.png" width="640" /&gt;&lt;/a&gt;&lt;a href="http://4.bp.blogspot.com/-7KqBiY8QYP0/Wzt4MKqqdnI/AAAAAAAAFmc/78f-wIvgAuALhj2g5aFMyQ4gs0b02SE4QCK4BGAYYCw/s1600/Screen%2BShot%2B2018-07-03%2Bat%2B8.27.54%2BAM.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="251" src="https://4.bp.blogspot.com/-7KqBiY8QYP0/Wzt4MKqqdnI/AAAAAAAAFmc/78f-wIvgAuALhj2g5aFMyQ4gs0b02SE4QCK4BGAYYCw/s400/Screen%2BShot%2B2018-07-03%2Bat%2B8.27.54%2BAM.png" width="400" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="" style="clear: both; text-align: left;"&gt;We can start adding the Paths to the doc,&amp;nbsp;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: left;"&gt;&lt;a href="http://4.bp.blogspot.com/-swa98cIRZzs/Wzt_DIkuxMI/AAAAAAAAFms/0TjvMT6wqTI62IOrL8PayzaE9zFE3aMDQCK4BGAYYCw/s1600/Screen%2BShot%2B2018-07-03%2Bat%2B8.07.43%2BAM.png" imageanchor="1"&gt;&lt;img border="0" height="170" src="https://4.bp.blogspot.com/-swa98cIRZzs/Wzt_DIkuxMI/AAAAAAAAFms/0TjvMT6wqTI62IOrL8PayzaE9zFE3aMDQCK4BGAYYCw/s640/Screen%2BShot%2B2018-07-03%2Bat%2B8.07.43%2BAM.png" width="640" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: left;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: left;"&gt;Adding Parameters and define it's type.&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: left;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div class="separator" style="clear: both; text-align: left;"&gt;&lt;a href="http://4.bp.blogspot.com/-OZ3nXxrFT6I/Wzt_PNEi4HI/AAAAAAAAFm0/AoMy4DeX7ec9PmkurBta2zzT-M7b4qIBwCK4BGAYYCw/s1600/Screen%2BShot%2B2018-07-03%2Bat%2B8.28.04%2BAM.png" imageanchor="1" style="clear: right; margin-bottom: 1em; margin-left: 1em;"&gt;&lt;img border="0" height="240" src="https://4.bp.blogspot.com/-OZ3nXxrFT6I/Wzt_PNEi4HI/AAAAAAAAFm0/AoMy4DeX7ec9PmkurBta2zzT-M7b4qIBwCK4BGAYYCw/s640/Screen%2BShot%2B2018-07-03%2Bat%2B8.28.04%2BAM.png" width="640" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;a href="http://1.bp.blogspot.com/-2x-JSSeBHj0/Wzt_mgy1fXI/AAAAAAAAFnE/B7PsCRbU3487BaAP6RnzfRJbPEgTSOHNgCK4BGAYYCw/s1600/Screen%2BShot%2B2018-07-03%2Bat%2B8.28.50%2BAM.png" imageanchor="1"&gt;&lt;img border="0" height="402" src="https://1.bp.blogspot.com/-2x-JSSeBHj0/Wzt_mgy1fXI/AAAAAAAAFnE/B7PsCRbU3487BaAP6RnzfRJbPEgTSOHNgCK4BGAYYCw/s640/Screen%2BShot%2B2018-07-03%2Bat%2B8.28.50%2BAM.png" width="640" /&gt;&lt;/a&gt;&lt;a href="http://4.bp.blogspot.com/-UaS3tO6kqpQ/Wzt_nSLFVHI/AAAAAAAAFnM/2p3CJNQpDRM7c6qHk0noKfcBgTj19F2hQCK4BGAYYCw/s1600/Screen%2BShot%2B2018-07-03%2Bat%2B8.28.58%2BAM.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em; text-align: center;"&gt;&lt;img border="0" height="236" src="https://4.bp.blogspot.com/-UaS3tO6kqpQ/Wzt_nSLFVHI/AAAAAAAAFnM/2p3CJNQpDRM7c6qHk0noKfcBgTj19F2hQCK4BGAYYCw/s640/Screen%2BShot%2B2018-07-03%2Bat%2B8.28.58%2BAM.png" width="640" /&gt;&lt;/a&gt;&lt;br /&gt;&lt;a href="http://3.bp.blogspot.com/-nj6qZhw1GBo/Wzt_tsuHMeI/AAAAAAAAFnU/3ZGagdOEu9Q50qJaxU1QFrKgpCLeX4kxwCK4BGAYYCw/s1600/Screen%2BShot%2B2018-07-03%2Bat%2B8.29.21%2BAM.png" imageanchor="1"&gt;&lt;img border="0" height="136" src="https://3.bp.blogspot.com/-nj6qZhw1GBo/Wzt_tsuHMeI/AAAAAAAAFnU/3ZGagdOEu9Q50qJaxU1QFrKgpCLeX4kxwCK4BGAYYCw/s640/Screen%2BShot%2B2018-07-03%2Bat%2B8.29.21%2BAM.png" width="640" /&gt;&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;And responses too, (if your path needs it)&lt;br /&gt;&lt;a href="http://1.bp.blogspot.com/-QmmJKkRFnqg/WzuCYXCyjoI/AAAAAAAAFno/bw8o469bwoMuZ07ey1GyZs1r1XGzJEsZQCK4BGAYYCw/s1600/Screen%2BShot%2B2018-07-03%2Bat%2B8.36.37%2BAM.png" imageanchor="1"&gt;&lt;img border="0" height="408" src="https://1.bp.blogspot.com/-QmmJKkRFnqg/WzuCYXCyjoI/AAAAAAAAFno/bw8o469bwoMuZ07ey1GyZs1r1XGzJEsZQCK4BGAYYCw/s640/Screen%2BShot%2B2018-07-03%2Bat%2B8.36.37%2BAM.png" width="640" /&gt;&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;Once we are done, it's time to export the API Standard documents.&lt;br /&gt;&lt;br /&gt;&lt;a href="http://4.bp.blogspot.com/-XDM2UyK6Bsk/WzuDBZjtgwI/AAAAAAAAFn0/Ks_HsobFs1EIXRTblCpKXGW0vthr90jhQCK4BGAYYCw/s1600/Screen%2BShot%2B2018-07-03%2Bat%2B8.43.13%2BAM.png" imageanchor="1"&gt;&lt;img border="0" height="292" src="https://4.bp.blogspot.com/-XDM2UyK6Bsk/WzuDBZjtgwI/AAAAAAAAFn0/Ks_HsobFs1EIXRTblCpKXGW0vthr90jhQCK4BGAYYCw/s640/Screen%2BShot%2B2018-07-03%2Bat%2B8.43.13%2BAM.png" width="640" /&gt;&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;&lt;h4&gt;&lt;b&gt;&lt;span style="font-size: large;"&gt;Generating Fuse Project from Standard API Doc&lt;/span&gt;&lt;/b&gt;&lt;/h4&gt;&lt;br /&gt;Go to JBoss Developer Studio, create a new Fuse project by right click on navigation panel, select New and Fuse Integration project.&lt;br /&gt;&lt;br /&gt;&lt;a href="http://4.bp.blogspot.com/-WJPxKJf_8sQ/WzuDXnvgfNI/AAAAAAAAFoI/v5x9AxjkvO0OMc-q_fF1CeW2cBW5IWNIwCK4BGAYYCw/s1600/Screen%2BShot%2B2018-07-03%2Bat%2B10.08.18%2BAM.png" imageanchor="1"&gt;&lt;img border="0" height="224" src="https://4.bp.blogspot.com/-WJPxKJf_8sQ/WzuDXnvgfNI/AAAAAAAAFoI/v5x9AxjkvO0OMc-q_fF1CeW2cBW5IWNIwCK4BGAYYCw/s640/Screen%2BShot%2B2018-07-03%2Bat%2B10.08.18%2BAM.png" width="640" /&gt;&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;Provide a name to the project,&lt;br /&gt;&lt;div style="text-align: center;"&gt;&lt;a href="http://1.bp.blogspot.com/-H3aeymLiXIk/WzuDQ6MwfrI/AAAAAAAAFn8/W0u6VQx5AWg8_NPsVMYNwpeh5xZ72NEvQCK4BGAYYCw/s1600/Screen%2BShot%2B2018-07-03%2Bat%2B8.51.36%2BAM.png" imageanchor="1"&gt;&lt;img border="0" height="212" src="https://1.bp.blogspot.com/-H3aeymLiXIk/WzuDQ6MwfrI/AAAAAAAAFn8/W0u6VQx5AWg8_NPsVMYNwpeh5xZ72NEvQCK4BGAYYCw/s320/Screen%2BShot%2B2018-07-03%2Bat%2B8.51.36%2BAM.png" width="320" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;We are going to do this in a microservices approach, so select the most popular runtime - Spring Boot, and we will be running this on Cloud Platform - OpenShift.&lt;br /&gt;&lt;br /&gt;&lt;div style="text-align: center;"&gt;&lt;a href="http://4.bp.blogspot.com/-FG9ynb0VjVg/WzuEF0ADebI/AAAAAAAAFoY/si2x1omk0pwJFHXz2z39ipS3FHMMV1EbwCK4BGAYYCw/s1600/Screen%2BShot%2B2018-07-03%2Bat%2B8.51.45%2BAM.png" imageanchor="1"&gt;&lt;img border="0" height="400" src="https://4.bp.blogspot.com/-FG9ynb0VjVg/WzuEF0ADebI/AAAAAAAAFoY/si2x1omk0pwJFHXz2z39ipS3FHMMV1EbwCK4BGAYYCw/s400/Screen%2BShot%2B2018-07-03%2Bat%2B8.51.45%2BAM.png" width="356" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;Select the Spring DSL template.&lt;br /&gt;&lt;br /&gt;&lt;div style="text-align: center;"&gt;&lt;a href="http://1.bp.blogspot.com/-wy1LtMUGz7Y/WzuEaVaCtWI/AAAAAAAAFok/Y6g8jJ3aJEs2rq7uifgEyKOPnxC6N3c5QCK4BGAYYCw/s1600/Screen%2BShot%2B2018-07-03%2Bat%2B8.51.59%2BAM.png" imageanchor="1"&gt;&lt;img border="0" height="400" src="https://1.bp.blogspot.com/-wy1LtMUGz7Y/WzuEaVaCtWI/AAAAAAAAFok/Y6g8jJ3aJEs2rq7uifgEyKOPnxC6N3c5QCK4BGAYYCw/s400/Screen%2BShot%2B2018-07-03%2Bat%2B8.51.59%2BAM.png" width="360" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;You will have a sample Fuse project,&lt;br /&gt;&lt;br /&gt;&lt;a href="http://2.bp.blogspot.com/-8yKi5i3kJdw/WzuFrH9Y0lI/AAAAAAAAFow/AVHm18CKbkIELG0mL3uSLCnzJOMF_EsgQCK4BGAYYCw/s1600/Screen%2BShot%2B2018-07-03%2Bat%2B10.17.38%2BAM.png" imageanchor="1"&gt;&lt;img border="0" height="144" src="https://2.bp.blogspot.com/-8yKi5i3kJdw/WzuFrH9Y0lI/AAAAAAAAFow/AVHm18CKbkIELG0mL3uSLCnzJOMF_EsgQCK4BGAYYCw/s640/Screen%2BShot%2B2018-07-03%2Bat%2B10.17.38%2BAM.png" width="640" /&gt;&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;Add the generated API Spec doc to directory: &lt;b&gt;src/spec/&lt;/b&gt;&lt;br /&gt;&lt;br /&gt;&lt;div class="separator" style="clear: both; text-align: center;"&gt;&lt;a href="http://3.bp.blogspot.com/-gNgkWcdI64c/WzuNhvUnKmI/AAAAAAAAFo8/kmW2PwCHAg8sjlnNwQvvKgbxZ7dsiUqMACK4BGAYYCw/s1600/Screen%2BShot%2B2018-07-03%2Bat%2B10.50.43%2BAM.png" imageanchor="1" style="margin-left: 1em; margin-right: 1em;"&gt;&lt;img border="0" height="277" src="https://3.bp.blogspot.com/-gNgkWcdI64c/WzuNhvUnKmI/AAAAAAAAFo8/kmW2PwCHAg8sjlnNwQvvKgbxZ7dsiUqMACK4BGAYYCw/s320/Screen%2BShot%2B2018-07-03%2Bat%2B10.50.43%2BAM.png" width="320" /&gt;&lt;/a&gt;&lt;/div&gt;&lt;br /&gt;&lt;br /&gt;Go to the &lt;b&gt;pom.xml&lt;/b&gt; file, place the following in it,&lt;br /&gt;&lt;br /&gt;&lt;span style="color: #009193; font-family: &amp;quot;monaco&amp;quot;; font-size: 11px;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #4e9192; font-family: &amp;quot;monaco&amp;quot;; font-size: 11px;"&gt;plugins&lt;/span&gt;&lt;span style="color: #009193; font-family: &amp;quot;monaco&amp;quot;; font-size: 11px;"&gt;&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;span style="color: #009193; font-family: &amp;quot;monaco&amp;quot;; font-size: 11px;"&gt;....&lt;/span&gt;&lt;br /&gt;&lt;div style="color: #4e9192; font-family: Monaco; font-size: 11px; font-stretch: normal; line-height: normal;"&gt;&lt;span style="color: #009193;"&gt;&amp;lt;&lt;/span&gt;plugin&lt;span style="color: #009193;"&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div style="font-family: Monaco; font-size: 11px; font-stretch: normal; line-height: normal;"&gt;&amp;nbsp;&amp;nbsp;&lt;span style="color: #009193;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #4e9192;"&gt;groupId&lt;/span&gt;&lt;span style="color: #009193;"&gt;&amp;gt;&lt;/span&gt;org.apache.camel&lt;span style="color: #009193;"&gt;&amp;lt;/&lt;/span&gt;&lt;span style="color: #4e9192;"&gt;groupId&lt;/span&gt;&lt;span style="color: #009193;"&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div style="font-family: Monaco; font-size: 11px; font-stretch: normal; line-height: normal;"&gt;&amp;nbsp;&amp;nbsp;&lt;span style="color: #009193;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #4e9192;"&gt;artifactId&lt;/span&gt;&lt;span style="color: #009193;"&gt;&amp;gt;&lt;/span&gt;camel-&lt;span style="text-decoration: underline;"&gt;restdsl&lt;/span&gt;-swagger-&lt;span style="text-decoration: underline;"&gt;plugin&lt;/span&gt;&lt;span style="color: #009193;"&gt;&amp;lt;/&lt;/span&gt;&lt;span style="color: #4e9192;"&gt;artifactId&lt;/span&gt;&lt;span style="color: #009193;"&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div style="font-family: Monaco; font-size: 11px; font-stretch: normal; line-height: normal;"&gt;&amp;nbsp;&amp;nbsp;&lt;span style="color: #009193;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #4e9192;"&gt;version&lt;/span&gt;&lt;span style="color: #009193;"&gt;&amp;gt;&lt;/span&gt;&lt;span style="color: black;"&gt;2.21.0&lt;/span&gt;&lt;span style="color: #009193;"&gt;&amp;lt;/&lt;/span&gt;&lt;span style="color: #4e9192;"&gt;version&lt;/span&gt;&lt;span style="color: #009193;"&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div style="font-family: Monaco; font-size: 11px; font-stretch: normal; line-height: normal;"&gt;&amp;nbsp;&amp;nbsp;&lt;span style="color: #009193;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #4e9192;"&gt;configuration&lt;/span&gt;&lt;span style="color: #009193;"&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div style="font-family: Monaco; font-size: 11px; font-stretch: normal; line-height: normal;"&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;span style="color: #009193;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #4e9192;"&gt;specificationUri&lt;/span&gt;&lt;span style="color: #009193;"&gt;&amp;gt;&lt;/span&gt;&lt;span style="color: black;"&gt;src/spec/MyCustomer.json&lt;/span&gt;&lt;span style="color: #009193;"&gt;&amp;lt;/&lt;/span&gt;&lt;span style="color: #4e9192;"&gt;specificationUri&lt;/span&gt;&lt;span style="color: #009193;"&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div style="font-family: Monaco; font-size: 11px; font-stretch: normal; line-height: normal;"&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;span style="color: #009193;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #4e9192;"&gt;fileName&lt;/span&gt;&lt;span style="color: #009193;"&gt;&amp;gt;&lt;/span&gt;camel-rest.xml&lt;span style="color: #009193;"&gt;&amp;lt;/&lt;/span&gt;&lt;span style="color: #4e9192;"&gt;fileName&lt;/span&gt;&lt;span style="color: #009193;"&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div style="font-family: Monaco; font-size: 11px; font-stretch: normal; line-height: normal;"&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;span style="color: #009193;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #4e9192;"&gt;outputDirectory&lt;/span&gt;&lt;span style="color: #009193;"&gt;&amp;gt;&lt;/span&gt;src/main/resources/spring&lt;span style="color: #009193;"&gt;&amp;lt;/&lt;/span&gt;&lt;span style="color: #4e9192;"&gt;outputDirectory&lt;/span&gt;&lt;span style="color: #009193;"&gt;&amp;gt;&lt;/span&gt;&lt;span class="Apple-tab-span" style="white-space: pre;"&gt; &lt;/span&gt; &amp;nbsp; &amp;nbsp;&lt;/div&gt;&lt;div style="font-family: Monaco; font-size: 11px; font-stretch: normal; line-height: normal;"&gt;&amp;nbsp; &lt;span style="color: #009193;"&gt;&amp;lt;/&lt;/span&gt;&lt;span style="color: #4e9192;"&gt;configuration&lt;/span&gt;&lt;span style="color: #009193;"&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;br /&gt;&lt;div style="color: #4e9192; font-family: Monaco; font-size: 11px; font-stretch: normal; line-height: normal;"&gt;&lt;span style="color: #009193;"&gt;&amp;lt;/&lt;/span&gt;plugin&lt;span style="color: #009193;"&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div style="color: #4e9192; font-family: Monaco; font-size: 11px; font-stretch: normal; line-height: normal;"&gt;&lt;span style="color: #009193;"&gt;....&lt;/span&gt;&lt;/div&gt;&lt;span style="color: #009193; font-family: &amp;quot;monaco&amp;quot;; font-size: 11px;"&gt;&amp;lt;/&lt;/span&gt;&lt;span style="color: #4e9192; font-family: &amp;quot;monaco&amp;quot;; font-size: 11px;"&gt;plugin&lt;/span&gt;&lt;span style="color: #009193; font-family: &amp;quot;monaco&amp;quot;; font-size: 11px;"&gt;&amp;gt;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;Generate the XML by running following in command line tool,&lt;br /&gt;&lt;br /&gt;&lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;&lt;b&gt;&amp;nbsp; mvn camel-restdsl-swagger:generate-xml&lt;/b&gt;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;&lt;a href="http://3.bp.blogspot.com/-aqD9wgB3KFE/WzuW2nHTU1I/AAAAAAAAFpU/HOO-xkHd89QeWNkBD2kaBjuLMbUCv9ZRQCK4BGAYYCw/s1600/Screen%2BShot%2B2018-07-03%2Bat%2B11.31.08%2BAM.png" imageanchor="1"&gt;&lt;img border="0" height="190" src="https://3.bp.blogspot.com/-aqD9wgB3KFE/WzuW2nHTU1I/AAAAAAAAFpU/HOO-xkHd89QeWNkBD2kaBjuLMbUCv9ZRQCK4BGAYYCw/s640/Screen%2BShot%2B2018-07-03%2Bat%2B11.31.08%2BAM.png" width="640" /&gt;&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;You will find a newly generated camel context named "&lt;b&gt;camel-rest.xml&lt;/b&gt;", and it has all the Path implementation in Camel.&lt;br /&gt;&lt;br /&gt;&lt;a href="http://2.bp.blogspot.com/-ZHrnbN0ukGs/WzuYTa0XpxI/AAAAAAAAFps/sAGdtJQUmDgbyJ4Nb8Zzp30F6UJ5jFcpACK4BGAYYCw/s1600/Screen%2BShot%2B2018-07-03%2Bat%2B11.33.36%2BAM.png" imageanchor="1"&gt;&lt;img border="0" height="206" src="https://2.bp.blogspot.com/-ZHrnbN0ukGs/WzuYTa0XpxI/AAAAAAAAFps/sAGdtJQUmDgbyJ4Nb8Zzp30F6UJ5jFcpACK4BGAYYCw/s640/Screen%2BShot%2B2018-07-03%2Bat%2B11.33.36%2BAM.png" width="640" /&gt;&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;Copy everything in between "&lt;b&gt;rests&lt;/b&gt;", into the original "&lt;b&gt;camel-context.xml&lt;/b&gt;"&lt;b&gt;&amp;nbsp;&lt;/b&gt;and place in-between "&lt;b&gt;camelContext&lt;/b&gt;". and add the following rest configuration on top of the rest component.&lt;br /&gt;&lt;br /&gt;&lt;div style="color: #932192; font-family: Monaco; font-size: 11px; font-stretch: normal; line-height: normal;"&gt;&lt;span style="color: #009193;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #4e9192;"&gt;restConfiguration&lt;/span&gt;&lt;span style="color: black;"&gt; &lt;/span&gt;apiContextPath&lt;span style="color: black;"&gt;=&lt;/span&gt;&lt;span style="color: #3933ff;"&gt;"api-docs"&lt;/span&gt;&lt;span style="color: black;"&gt; &lt;/span&gt;bindingMode&lt;span style="color: black;"&gt;=&lt;/span&gt;&lt;span style="color: #3933ff;"&gt;"auto"&lt;/span&gt;&lt;/div&gt;&lt;div style="color: #3933ff; font-family: Monaco; font-size: 11px; font-stretch: normal; line-height: normal;"&gt;&lt;span style="color: black;"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;/span&gt;&lt;span style="color: #932192;"&gt;component&lt;/span&gt;&lt;span style="color: black;"&gt;=&lt;/span&gt;"undertow"&lt;span style="color: black;"&gt; &lt;/span&gt;&lt;span style="color: #932192;"&gt;contextPath&lt;/span&gt;&lt;span style="color: black;"&gt;=&lt;/span&gt;"/customer"&lt;/div&gt;&lt;div style="font-family: Monaco; font-size: 11px; font-stretch: normal; line-height: normal;"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &amp;nbsp; &lt;span style="color: #932192;"&gt;enableCORS&lt;/span&gt;=&lt;span style="color: #3933ff;"&gt;"true"&lt;/span&gt; &lt;span style="color: #932192;"&gt;port&lt;/span&gt;=&lt;span style="color: #3933ff;"&gt;"8080"&lt;/span&gt;&lt;span style="color: #009193;"&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div style="font-family: Monaco; font-size: 11px; font-stretch: normal; line-height: normal;"&gt;&amp;nbsp; &amp;nbsp;&lt;span style="color: #009193;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #4e9192;"&gt;apiProperty&lt;/span&gt; &lt;span style="color: #932192;"&gt;key&lt;/span&gt;=&lt;span style="color: #3933ff;"&gt;"cors"&lt;/span&gt; &lt;span style="color: #932192;"&gt;value&lt;/span&gt;=&lt;span style="color: #3933ff;"&gt;"true"&lt;/span&gt;&lt;span style="color: #009193;"&gt;/&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div style="color: #3933ff; font-family: Monaco; font-size: 11px; font-stretch: normal; line-height: normal;"&gt;&lt;span style="color: black;"&gt;&amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span style="color: #009193;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #4e9192;"&gt;apiProperty&lt;/span&gt;&lt;span style="color: black;"&gt; &lt;/span&gt;&lt;span style="color: #932192;"&gt;key&lt;/span&gt;&lt;span style="color: black;"&gt;=&lt;/span&gt;"api.title"&lt;span style="color: black;"&gt; &lt;/span&gt;&lt;span style="color: #932192;"&gt;value&lt;/span&gt;&lt;span style="color: black;"&gt;=&lt;/span&gt;"Customer Service"&lt;span style="color: #009193;"&gt;/&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div style="color: #3933ff; font-family: Monaco; font-size: 11px; font-stretch: normal; line-height: normal;"&gt;&lt;span style="color: black;"&gt;&amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span style="color: #009193;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #4e9192;"&gt;apiProperty&lt;/span&gt;&lt;span style="color: black;"&gt; &lt;/span&gt;&lt;span style="color: #932192;"&gt;key&lt;/span&gt;&lt;span style="color: black;"&gt;=&lt;/span&gt;"api.version"&lt;span style="color: black;"&gt; &lt;/span&gt;&lt;span style="color: #932192;"&gt;value&lt;/span&gt;&lt;span style="color: black;"&gt;=&lt;/span&gt;"1.0.0"&lt;span style="color: #009193;"&gt;/&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;br /&gt;&lt;div style="color: #4e9192; font-family: Monaco; font-size: 11px; font-stretch: normal; line-height: normal;"&gt;&lt;span style="color: #009193;"&gt;&amp;lt;/&lt;/span&gt;restConfiguration&lt;span style="color: #009193;"&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div style="color: #4e9192; font-family: Monaco; font-size: 11px; font-stretch: normal; line-height: normal;"&gt;&lt;span style="color: #009193;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style="color: #4e9192; font-family: Monaco; font-size: 11px; font-stretch: normal; line-height: normal;"&gt;&lt;span style="color: #009193;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style="color: #4e9192; font-family: Monaco; font-size: 11px; font-stretch: normal; line-height: normal;"&gt;&lt;span style="color: #009193;"&gt;&lt;a href="http://3.bp.blogspot.com/-TcwfnhhYf_Y/WzufhZBQE5I/AAAAAAAAFp4/gJ25mM5u_5QW1qKOpiWQddOuh1daxuVIwCK4BGAYYCw/s1600/Screen%2BShot%2B2018-07-03%2Bat%2B12.07.58%2BPM.png" imageanchor="1"&gt;&lt;img border="0" height="222" src="https://3.bp.blogspot.com/-TcwfnhhYf_Y/WzufhZBQE5I/AAAAAAAAFp4/gJ25mM5u_5QW1qKOpiWQddOuh1daxuVIwCK4BGAYYCw/s640/Screen%2BShot%2B2018-07-03%2Bat%2B12.07.58%2BPM.png" width="640" /&gt;&lt;/a&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style="color: #4e9192; font-family: Monaco; font-size: 11px; font-stretch: normal; line-height: normal;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style="color: #4e9192; font-family: Monaco; font-size: 11px; font-stretch: normal; line-height: normal;"&gt;&lt;br /&gt;&lt;/div&gt;&lt;div style="font-stretch: normal; line-height: normal;"&gt;Delete&amp;nbsp;the generated "&lt;b&gt;camel-rest.xml&lt;/b&gt;".&amp;nbsp;&lt;/div&gt;&lt;h4&gt;&lt;span style="font-size: large;"&gt;Mocking the APIs with Camel&lt;/span&gt;&lt;/h4&gt;We will mock the return result by adding a constant defined bean in the camel context.&lt;br /&gt;Add a beans.xml under&amp;nbsp;&lt;b&gt;src/main.resource/spring&amp;nbsp;&lt;/b&gt;(Right click on the folder, select New-&amp;gt;beans.xml File)&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;a href="http://2.bp.blogspot.com/-Og8GmwF5Ri8/Wz4sotd7_nI/AAAAAAAAFqI/ZJA_QTS96-0QuhKo0iLClYb4YdL87On7wCK4BGAYYCw/s1600/Screen%2BShot%2B2018-07-05%2Bat%2B10.34.50%2BAM.png" imageanchor="1"&gt;&lt;img border="0" height="346" src="https://2.bp.blogspot.com/-Og8GmwF5Ri8/Wz4sotd7_nI/AAAAAAAAFqI/ZJA_QTS96-0QuhKo0iLClYb4YdL87On7wCK4BGAYYCw/s640/Screen%2BShot%2B2018-07-05%2Bat%2B10.34.50%2BAM.png" width="640" /&gt;&lt;/a&gt;&lt;br /&gt;&lt;br /&gt;Add the follow code snap to the beans.xml&lt;br /&gt;&lt;br /&gt;&lt;div style="color: #3933ff; font-family: Monaco; font-size: 13px; font-stretch: normal; line-height: normal;"&gt;&lt;span style="color: #009193;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #4e9192;"&gt;util:list&lt;/span&gt;&lt;span style="color: black;"&gt;&amp;nbsp;&lt;/span&gt;&lt;span style="color: #932192;"&gt;id&lt;/span&gt;&lt;span style="color: black;"&gt;=&lt;/span&gt;"CustomerList"&lt;span style="color: black;"&gt;&amp;nbsp;&lt;/span&gt;&lt;span style="color: #932192;"&gt;list-class&lt;/span&gt;&lt;span style="color: black;"&gt;=&lt;/span&gt;"java.util.ArrayList"&lt;span style="color: #009193;"&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div style="font-family: Monaco; font-size: 13px; font-stretch: normal; line-height: normal;"&gt;&amp;nbsp; &amp;nbsp;&lt;span style="color: #009193;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #4e9192;"&gt;ref&lt;/span&gt;&amp;nbsp;&lt;span style="color: #932192;"&gt;bean&lt;/span&gt;=&lt;span style="color: #3933ff;"&gt;"Customer"&lt;/span&gt;&lt;span style="color: #009193;"&gt;/&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div style="color: #4e9192; font-family: Monaco; font-size: 13px; font-stretch: normal; line-height: normal;"&gt;&lt;span style="color: #009193;"&gt;&amp;lt;/&lt;/span&gt;util:list&lt;span style="color: #009193;"&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div style="color: #3933ff; font-family: Monaco; font-size: 13px; font-stretch: normal; line-height: normal;"&gt;&lt;span style="color: #009193;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #4e9192;"&gt;util:map&lt;/span&gt;&lt;span style="color: black;"&gt;&amp;nbsp;&lt;/span&gt;&lt;span style="color: #932192;"&gt;id&lt;/span&gt;&lt;span style="color: black;"&gt;=&lt;/span&gt;"Customer"&lt;span style="color: black;"&gt;&amp;nbsp;&lt;/span&gt;&lt;span style="color: #932192;"&gt;map-class&lt;/span&gt;&lt;span style="color: black;"&gt;=&lt;/span&gt;"java.util.HashMap"&lt;span style="color: #009193;"&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div style="color: #3933ff; font-family: Monaco; font-size: 13px; font-stretch: normal; line-height: normal;"&gt;&lt;span style="color: black;"&gt;&amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span style="color: #009193;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #4e9192;"&gt;entry&lt;/span&gt;&lt;span style="color: black;"&gt;&amp;nbsp;&lt;/span&gt;&lt;span style="color: #932192;"&gt;key&lt;/span&gt;&lt;span style="color: black;"&gt;=&lt;/span&gt;"name"&lt;span style="color: black;"&gt;&amp;nbsp;&lt;/span&gt;&lt;span style="color: #932192;"&gt;value&lt;/span&gt;&lt;span style="color: black;"&gt;=&lt;/span&gt;"Christina"&lt;span style="color: #009193;"&gt;/&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div style="font-family: Monaco; font-size: 13px; font-stretch: normal; line-height: normal;"&gt;&amp;nbsp; &amp;nbsp;&lt;span style="color: #009193;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #4e9192;"&gt;entry&lt;/span&gt;&amp;nbsp;&lt;span style="color: #932192;"&gt;key&lt;/span&gt;=&lt;span style="color: #3933ff;"&gt;"age"&lt;/span&gt;&amp;nbsp;&lt;span style="color: #932192;"&gt;value&lt;/span&gt;=&lt;span style="color: #3933ff;"&gt;"28"&lt;/span&gt;&lt;span style="color: #009193;"&gt;/&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div style="color: #3933ff; font-family: Monaco; font-size: 13px; font-stretch: normal; line-height: normal;"&gt;&lt;span style="color: black;"&gt;&amp;nbsp; &amp;nbsp;&lt;/span&gt;&lt;span style="color: #009193;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #4e9192;"&gt;entry&lt;/span&gt;&lt;span style="color: black;"&gt;&amp;nbsp;&lt;/span&gt;&lt;span style="color: #932192;"&gt;key&lt;/span&gt;&lt;span style="color: black;"&gt;=&lt;/span&gt;"contact"&lt;span style="color: black;"&gt;&amp;nbsp;&lt;/span&gt;&lt;span style="color: #932192;"&gt;value&lt;/span&gt;&lt;span style="color: black;"&gt;=&lt;/span&gt;"765483921"&lt;span style="color: #009193;"&gt;/&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;br /&gt;&lt;div style="color: #4e9192; font-family: Monaco; font-size: 13px; font-stretch: normal; line-height: normal;"&gt;&lt;span style="color: #009193;"&gt;&amp;lt;/&lt;/span&gt;util:map&lt;span style="color: #009193;"&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div&gt;&lt;span style="color: #009193;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;Add the camel route in the to "&lt;b&gt;camel-context.xml&lt;/b&gt;", the first one returns a mock customer data, the second one takes the input of a customer info.&lt;br /&gt;&lt;br /&gt;&lt;div style="color: #3933ff; font-family: Monaco; font-size: 13px; font-stretch: normal; line-height: normal;"&gt;&lt;span style="color: #009193;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #4e9192;"&gt;route&lt;/span&gt;&lt;span style="color: black;"&gt; &lt;/span&gt;&lt;span style="color: #932192;"&gt;id&lt;/span&gt;&lt;span style="color: black;"&gt;=&lt;/span&gt;"rest1-route"&lt;span style="color: #009193;"&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div style="font-family: Monaco; font-size: 13px; font-stretch: normal; line-height: normal;"&gt;&amp;nbsp;&amp;nbsp;&lt;span style="color: #009193;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #4e9192;"&gt;from&lt;/span&gt;&lt;span style="color: black;"&gt; &lt;/span&gt;&lt;span style="color: #932192;"&gt;id&lt;/span&gt;&lt;span style="color: black;"&gt;=&lt;/span&gt;&lt;span style="color: #3933ff;"&gt;"restone"&lt;/span&gt;&lt;span style="color: black;"&gt; &lt;/span&gt;&lt;span style="color: #932192;"&gt;uri&lt;/span&gt;&lt;span style="color: black;"&gt;=&lt;/span&gt;&lt;span style="color: #3933ff;"&gt;"direct:rest1"&lt;/span&gt;&lt;span style="color: #009193;"&gt;/&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div style="color: #3933ff; font-family: Monaco; font-size: 13px; font-stretch: normal; line-height: normal;"&gt;&lt;span style="color: black;"&gt;&amp;nbsp; &lt;/span&gt;&lt;span style="color: #009193;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #4e9192;"&gt;setBody&lt;/span&gt;&lt;span style="color: black;"&gt; &lt;/span&gt;&lt;span style="color: #932192;"&gt;id&lt;/span&gt;&lt;span style="color: black;"&gt;=&lt;/span&gt;"route-setBody1"&lt;span style="color: #009193;"&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div style="font-family: Monaco; font-size: 13px; font-stretch: normal; line-height: normal;"&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;span style="color: #009193;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #4e9192;"&gt;simple&lt;/span&gt;&lt;span style="color: #009193;"&gt;&amp;gt;&lt;/span&gt;bean:CustomerList?method=get(0)&lt;span style="color: #009193;"&gt;&amp;lt;/&lt;/span&gt;&lt;span style="color: #4e9192;"&gt;simple&lt;/span&gt;&lt;span style="color: #009193;"&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div style="font-family: Monaco; font-size: 13px; font-stretch: normal; line-height: normal;"&gt;&amp;nbsp; &lt;span style="color: #009193;"&gt;&amp;lt;/&lt;/span&gt;&lt;span style="color: #4e9192;"&gt;setBody&lt;/span&gt;&lt;span style="color: #009193;"&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div style="font-family: Monaco; font-size: 13px; font-stretch: normal; line-height: normal;"&gt;&lt;span style="color: #009193;"&gt;&amp;lt;/&lt;/span&gt;&lt;span style="color: #4e9192;"&gt;route&lt;/span&gt;&lt;span style="color: #009193;"&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div style="color: #3933ff; font-family: Monaco; font-size: 13px; font-stretch: normal; line-height: normal;"&gt;&lt;span style="color: #009193;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #4e9192;"&gt;route&lt;/span&gt;&lt;span style="color: black;"&gt; &lt;/span&gt;&lt;span style="color: #932192;"&gt;id&lt;/span&gt;&lt;span style="color: black;"&gt;=&lt;/span&gt;"rest2-route"&lt;span style="color: #009193;"&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div style="font-family: Monaco; font-size: 13px; font-stretch: normal; line-height: normal;"&gt;&amp;nbsp;&amp;nbsp;&lt;span style="color: #009193;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #4e9192;"&gt;from&lt;/span&gt;&lt;span style="color: black;"&gt; &lt;/span&gt;&lt;span style="color: #932192;"&gt;id&lt;/span&gt;&lt;span style="color: black;"&gt;=&lt;/span&gt;&lt;span style="color: #3933ff;"&gt;"resttwo"&lt;/span&gt;&lt;span style="color: black;"&gt; &lt;/span&gt;&lt;span style="color: #932192;"&gt;uri&lt;/span&gt;&lt;span style="color: black;"&gt;=&lt;/span&gt;&lt;span style="color: #3933ff;"&gt;"direct:rest2"&lt;/span&gt;&lt;span style="color: #009193;"&gt;/&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div style="color: #3933ff; font-family: Monaco; font-size: 13px; font-stretch: normal; line-height: normal;"&gt;&lt;span style="color: black;"&gt;&amp;nbsp; &lt;/span&gt;&lt;span style="color: #009193;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #4e9192;"&gt;log&lt;/span&gt;&lt;span style="color: black;"&gt; &lt;/span&gt;&lt;span style="color: #932192;"&gt;id&lt;/span&gt;&lt;span style="color: black;"&gt;=&lt;/span&gt;"input-log"&lt;span style="color: black;"&gt; &lt;/span&gt;&lt;span style="color: #932192;"&gt;message&lt;/span&gt;&lt;span style="color: black;"&gt;=&lt;/span&gt;"&amp;gt;&amp;gt;&amp;gt; ${body}"&lt;span style="color: #009193;"&gt;/&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div style="color: #3933ff; font-family: Monaco; font-size: 13px; font-stretch: normal; line-height: normal;"&gt;&lt;span style="color: black;"&gt;&amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;/span&gt;&lt;span style="color: #009193;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #4e9192;"&gt;setBody&lt;/span&gt;&lt;span style="color: black;"&gt; &lt;/span&gt;&lt;span style="color: #932192;"&gt;id&lt;/span&gt;&lt;span style="color: black;"&gt;=&lt;/span&gt;"route-setBody2"&lt;span style="color: #009193;"&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div style="font-family: Monaco; font-size: 13px; font-stretch: normal; line-height: normal;"&gt;&amp;nbsp; &amp;nbsp; &amp;nbsp;&amp;nbsp;&lt;span style="color: #009193;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #4e9192;"&gt;simple&lt;/span&gt;&lt;span style="color: #009193;"&gt;&amp;gt;&lt;/span&gt;Customer created&lt;span style="color: #009193;"&gt;&amp;lt;/&lt;/span&gt;&lt;span style="color: #4e9192;"&gt;simple&lt;/span&gt;&lt;span style="color: #009193;"&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div style="font-family: Monaco; font-size: 13px; font-stretch: normal; line-height: normal;"&gt;&amp;nbsp; &amp;nbsp; &lt;span style="color: #009193;"&gt;&amp;lt;/&lt;/span&gt;&lt;span style="color: #4e9192;"&gt;setBody&lt;/span&gt;&lt;span style="color: #009193;"&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;br /&gt;&lt;div style="font-family: Monaco; font-size: 13px; font-stretch: normal; line-height: normal;"&gt;&lt;span style="color: #009193;"&gt;&amp;lt;/&lt;/span&gt;&lt;span style="color: #4e9192;"&gt;route&lt;/span&gt;&lt;span style="color: #009193;"&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;br /&gt;Now, it's time to setup the dependency libraries into pom.xml.&lt;br /&gt;&lt;br /&gt;&lt;div style="color: #4e9192; font-family: Monaco; font-size: 13px; font-stretch: normal; line-height: normal;"&gt;&lt;span style="color: #009193;"&gt;&amp;lt;&lt;/span&gt;dependency&lt;span style="color: #009193;"&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div style="font-family: Monaco; font-size: 13px; font-stretch: normal; line-height: normal;"&gt;&amp;nbsp;&amp;nbsp;&lt;span style="color: #009193;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #4e9192;"&gt;groupId&lt;/span&gt;&lt;span style="color: #009193;"&gt;&amp;gt;&lt;/span&gt;org.springframework.boot&lt;span style="color: #009193;"&gt;&amp;lt;/&lt;/span&gt;&lt;span style="color: #4e9192;"&gt;groupId&lt;/span&gt;&lt;span style="color: #009193;"&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div style="font-family: Monaco; font-size: 13px; font-stretch: normal; line-height: normal;"&gt;&amp;nbsp;&amp;nbsp;&lt;span style="color: #009193;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #4e9192;"&gt;artifactId&lt;/span&gt;&lt;span style="color: #009193;"&gt;&amp;gt;&lt;/span&gt;spring-boot-starter-&lt;span style="text-decoration: underline;"&gt;undertow&lt;/span&gt;&lt;span style="color: #009193;"&gt;&amp;lt;/&lt;/span&gt;&lt;span style="color: #4e9192;"&gt;artifactId&lt;/span&gt;&lt;span style="color: #009193;"&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div style="color: #4e9192; font-family: Monaco; font-size: 13px; font-stretch: normal; line-height: normal;"&gt;&lt;span style="color: #009193;"&gt;&amp;lt;/&lt;/span&gt;dependency&lt;span style="color: #009193;"&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div style="font-family: Monaco; font-size: 13px; font-stretch: normal; line-height: normal; min-height: 17px;"&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&lt;/div&gt;&lt;div style="color: #4e9192; font-family: Monaco; font-size: 13px; font-stretch: normal; line-height: normal;"&gt;&lt;span style="color: #009193;"&gt;&amp;lt;&lt;/span&gt;dependency&lt;span style="color: #009193;"&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div style="font-family: Monaco; font-size: 13px; font-stretch: normal; line-height: normal;"&gt;&amp;nbsp;&amp;nbsp;&lt;span style="color: #009193;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #4e9192;"&gt;groupId&lt;/span&gt;&lt;span style="color: #009193;"&gt;&amp;gt;&lt;/span&gt;org.apache.camel&lt;span style="color: #009193;"&gt;&amp;lt;/&lt;/span&gt;&lt;span style="color: #4e9192;"&gt;groupId&lt;/span&gt;&lt;span style="color: #009193;"&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div style="font-family: Monaco; font-size: 13px; font-stretch: normal; line-height: normal;"&gt;&amp;nbsp;&amp;nbsp;&lt;span style="color: #009193;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #4e9192;"&gt;artifactId&lt;/span&gt;&lt;span style="color: #009193;"&gt;&amp;gt;&lt;/span&gt;camel-&lt;span style="text-decoration: underline;"&gt;undertow&lt;/span&gt;-starter&lt;span style="color: #009193;"&gt;&amp;lt;/&lt;/span&gt;&lt;span style="color: #4e9192;"&gt;artifactId&lt;/span&gt;&lt;span style="color: #009193;"&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div style="color: #4e9192; font-family: Monaco; font-size: 13px; font-stretch: normal; line-height: normal;"&gt;&lt;span style="color: #009193;"&gt;&amp;lt;/&lt;/span&gt;dependency&lt;span style="color: #009193;"&gt;&amp;gt;&lt;/span&gt;&lt;span style="color: black;"&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div style="font-family: Monaco; font-size: 13px; font-stretch: normal; line-height: normal; min-height: 17px;"&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&lt;/div&gt;&lt;div style="color: #4e9192; font-family: Monaco; font-size: 13px; font-stretch: normal; line-height: normal;"&gt;&lt;span style="color: #009193;"&gt;&amp;lt;&lt;/span&gt;dependency&lt;span style="color: #009193;"&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div style="font-family: Monaco; font-size: 13px; font-stretch: normal; line-height: normal;"&gt;&amp;nbsp;&amp;nbsp;&lt;span style="color: #009193;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #4e9192;"&gt;groupId&lt;/span&gt;&lt;span style="color: #009193;"&gt;&amp;gt;&lt;/span&gt;org.apache.camel&lt;span style="color: #009193;"&gt;&amp;lt;/&lt;/span&gt;&lt;span style="color: #4e9192;"&gt;groupId&lt;/span&gt;&lt;span style="color: #009193;"&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div style="font-family: Monaco; font-size: 13px; font-stretch: normal; line-height: normal;"&gt;&amp;nbsp;&amp;nbsp;&lt;span style="color: #009193;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #4e9192;"&gt;artifactId&lt;/span&gt;&lt;span style="color: #009193;"&gt;&amp;gt;&lt;/span&gt;camel-&lt;span style="text-decoration: underline;"&gt;jackson&lt;/span&gt;-starter&lt;span style="color: #009193;"&gt;&amp;lt;/&lt;/span&gt;&lt;span style="color: #4e9192;"&gt;artifactId&lt;/span&gt;&lt;span style="color: #009193;"&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div style="color: #4e9192; font-family: Monaco; font-size: 13px; font-stretch: normal; line-height: normal;"&gt;&lt;span style="color: #009193;"&gt;&amp;lt;/&lt;/span&gt;dependency&lt;span style="color: #009193;"&gt;&amp;gt;&lt;/span&gt;&lt;span style="color: black;"&gt;&amp;nbsp;&lt;/span&gt;&lt;/div&gt;&lt;div style="font-family: Monaco; font-size: 13px; font-stretch: normal; line-height: normal; min-height: 17px;"&gt;&amp;nbsp;&amp;nbsp; &amp;nbsp;&lt;/div&gt;&lt;div style="color: #4e9192; font-family: Monaco; font-size: 13px; font-stretch: normal; line-height: normal;"&gt;&lt;span style="color: #009193;"&gt;&amp;lt;&lt;/span&gt;dependency&lt;span style="color: #009193;"&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div style="font-family: Monaco; font-size: 13px; font-stretch: normal; line-height: normal;"&gt;&amp;nbsp;&amp;nbsp;&lt;span style="color: #009193;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #4e9192;"&gt;groupId&lt;/span&gt;&lt;span style="color: #009193;"&gt;&amp;gt;&lt;/span&gt;org.apache.camel&lt;span style="color: #009193;"&gt;&amp;lt;/&lt;/span&gt;&lt;span style="color: #4e9192;"&gt;groupId&lt;/span&gt;&lt;span style="color: #009193;"&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div style="font-family: Monaco; font-size: 13px; font-stretch: normal; line-height: normal;"&gt;&amp;nbsp;&amp;nbsp;&lt;span style="color: #009193;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #4e9192;"&gt;artifactId&lt;/span&gt;&lt;span style="color: #009193;"&gt;&amp;gt;&lt;/span&gt;camel-swagger-java-starter&lt;span style="color: #009193;"&gt;&amp;lt;/&lt;/span&gt;&lt;span style="color: #4e9192;"&gt;artifactId&lt;/span&gt;&lt;span style="color: #009193;"&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;br /&gt;&lt;div style="color: #4e9192; font-family: Monaco; font-size: 13px; font-stretch: normal; line-height: normal;"&gt;&lt;span style="color: #009193;"&gt;&amp;lt;/&lt;/span&gt;dependency&lt;span style="color: #009193;"&gt;&amp;gt;&lt;/span&gt;&lt;/div&gt;&lt;div style="color: #4e9192; font-family: Monaco; font-size: 13px; font-stretch: normal; line-height: normal;"&gt;&lt;span style="color: #009193;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style="color: #4e9192; font-family: Monaco; font-size: 13px; font-stretch: normal; line-height: normal;"&gt;&lt;span style="caret-color: rgb(0, 0, 0); color: black; font-family: -webkit-standard; font-size: small;"&gt;Finally, it's time to test. run the follow in command line:&lt;/span&gt;&lt;/div&gt;&lt;br /&gt;&lt;span style="font-family: &amp;quot;courier new&amp;quot; , &amp;quot;courier&amp;quot; , monospace;"&gt;&lt;b&gt;&amp;nbsp; mvn sprint-boot:run&lt;/b&gt;&lt;/span&gt;&lt;br /&gt;&lt;br /&gt;And two endpoint will be exposed for testing.&lt;br /&gt;&lt;br /&gt;&lt;div style="background-color: rgba(0, 0, 0, 0.85098); color: #f4f4f4; font-family: Monaco; font-size: 17px; font-stretch: normal; line-height: normal;"&gt;&lt;span style="font-variant-ligatures: no-common-ligatures;"&gt;Christina Laptop$ curl http://YOURIP:8080/customer/id/123&lt;/span&gt;&lt;/div&gt;&lt;div style="background-color: rgba(0, 0, 0, 0.85098); color: #f4f4f4; font-family: Monaco; font-size: 17px; font-stretch: normal; line-height: normal;"&gt;&lt;span style="font-variant-ligatures: no-common-ligatures;"&gt;{"name":"Christina","age":"28","contact":"765483921"}&lt;/span&gt;&lt;/div&gt;&lt;div style="background-color: rgba(0, 0, 0, 0.85098); color: #f4f4f4; font-family: Monaco; font-size: 17px; font-stretch: normal; line-height: normal;"&gt;&lt;span style="font-variant-ligatures: no-common-ligatures;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style="background-color: rgba(0, 0, 0, 0.85098); color: #f4f4f4; font-family: Monaco; font-size: 17px; font-stretch: normal; line-height: normal;"&gt;&lt;span style="font-variant-ligatures: no-common-ligatures;"&gt;Christina Laptop$ curl --header "Content-Type: application/json" &amp;nbsp; --request PUT &amp;nbsp; --data '{"name":"Christina","age":28,"contact":"765483921"}' &amp;nbsp; http://YOURIP:8080/customer/add&lt;/span&gt;&lt;/div&gt;&lt;div style="background-color: rgba(0, 0, 0, 0.85098); color: #f4f4f4; font-family: Monaco; font-size: 17px; font-stretch: normal; line-height: normal;"&gt;&lt;span style="font-variant-ligatures: no-common-ligatures;"&gt;&lt;br /&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style="background-color: rgba(0, 0, 0, 0.85098); color: #f4f4f4; font-family: Monaco; font-size: 17px; font-stretch: normal; line-height: normal;"&gt;&lt;span style="font-variant-ligatures: no-common-ligatures;"&gt;&lt;/span&gt;&lt;/div&gt;&lt;div style="background-color: rgba(0, 0, 0, 0.85098); color: #f4f4f4; font-family: Monaco; font-size: 17px; font-stretch: normal; line-height: normal;"&gt;&lt;span style="font-variant-ligatures: no-common-ligatures;"&gt;"Customer created"&lt;/span&gt;&lt;/div&gt;&lt;br /&gt;You are now ready for the consumer to start testing the APIs.&lt;br /&gt;Next part I will take you through how to actually implement the API, expose it on Cloud and manage it.&lt;br /&gt;&lt;br /&gt;&lt;img src="http://feeds.feedburner.com/~r/blogspot/hFXzh/~4/WA4KftL3pHI" height="1" width="1" alt=""/&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/iepacLcsmAo" height="1" width="1" alt=""/&gt;</content><summary>This is part one of my two-article series that demonstrates the approach of implementing contract-first API design using Apicurioand Red Hat Fuse. It covers how to create an OpenAPI standard document as the contract between API providers and consumers using Apicurio. It also shows how to quickly create mock tests using Red Hat Fuse. There are two common approaches of creating these APIs. Code Firs...</summary><dc:creator>Christina Lin</dc:creator><dc:date>2018-07-05T17:46:00Z</dc:date><feedburner:origLink>http://feedproxy.google.com/~r/blogspot/hFXzh/~3/WA4KftL3pHI/fuse-contract-first-api-design-with.html</feedburner:origLink></entry><entry><title>Using OpenShift to deploy .NET Core applications</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/zR0uacmeKRY/" /><category term=".net" scheme="searchisko:content:tags" /><category term=".NET Core" scheme="searchisko:content:tags" /><category term="Container Development Kit" scheme="searchisko:content:tags" /><category term="feed_group_name_nonmiddleware" scheme="searchisko:content:tags" /><category term="feed_name_redhat_developer_blog" scheme="searchisko:content:tags" /><category term="Kubernetes" scheme="searchisko:content:tags" /><category term="Red Hat OpenShift" scheme="searchisko:content:tags" /><category term="Red Hat OpenShift Container Platform" scheme="searchisko:content:tags" /><category term="s2i" scheme="searchisko:content:tags" /><author><name>Tom Deseyn</name></author><id>searchisko:content:id:jbossorg_blog-using_openshift_to_deploy_net_core_applications</id><updated>2018-07-05T17:15:29Z</updated><published>2018-07-05T17:15:29Z</published><content type="html">&lt;p&gt;Containers are the new way of deploying applications. They provide an efficient mechanism to deploy self-contained applications in a portable way across clouds and OS distributions. In this blog post we&amp;#8217;ll look at what OpenShift brings for .NET Core specifically.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Kubernetes and OpenShift&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;&lt;em&gt;Kubernetes&lt;/em&gt; is the de facto orchestrator for managing containerized applications. Google open-sourced Kubernetes in 2014 and Red Hat was one of the first companies to work with Google on Kubernetes. Red Hat is the 2nd leading contributor to the Kubernetes upstream project.&lt;/p&gt; &lt;p&gt;&lt;em&gt;OpenShift&lt;/em&gt; is an open-source DevOps platform that is built on top of Kubernetes. It integrates directly with your application’s source code. This enables continuous integration/continuous deployment (CI/CD) workflows. Tools are available to scale and monitor your applications. The OpenShift Catalog makes it easy to setup middleware and databases. OpenShift comes with comprehensive documentation to install and manage your installation. It can run on-prem and on public clouds such as AWS, GCP and Azure.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;.NET Core on OpenShift&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;.NET Core is an open-source, cross-platform .NET implementation. It was open-sourced in 2015 by Microsoft. Like with Kubernetes and OpenShift, this permits anyone to build, maintain and support .NET Core. Red Hat is doing this since the 1.0 release and, in tandem with Microsoft, Red Hat provides services releases and new .NET Core releases for Red Hat Enterprise Linux (RHEL) and OpenShift.&lt;/p&gt; &lt;p&gt;For RHEL, this means the .NET Core SDK and runtime are available for building and running applications. For OpenShift, it means there is a source-to-image (s2i) builder for .NET Core which makes OpenShift understand how to build .NET Core applications.&lt;/p&gt; &lt;p&gt;The s2i-builder can be tuned with &lt;a href="https://access.redhat.com/documentation/en-us/net_core/2.1/html/getting_started_guide/gs_dotnet_on_openshift#gs_env-var"&gt;variables&lt;/a&gt; and it supports many typical workflows. If more control is required, a custom script (&lt;code&gt;.s2i/bin/assemble&lt;/code&gt;) can be versioned with the source code that directly controls the build. Even more advanced scenarios are possible using Jenkins on OpenShift, which also supports .NET Core.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Getting Started&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;You can run OpenShift on your development machine using &lt;em&gt;minishift&lt;/em&gt;. minishift comes as part of the Red Hat Container Development Kit (CDK). The &lt;a href="https://access.redhat.com/documentation/en-us/red_hat_container_development_kit/3.1/html/getting_started_guide/getting_started_with_container_development_kit#quickstart"&gt;CDK documentation&lt;/a&gt; describes how to install and start minishift. CDK is available as part of the &lt;a href="https://developers.redhat.com/blog/2018/01/19/command-line-heros-podcast/"&gt;no-cost development subscription&lt;/a&gt;. It runs on Windows and macOS too!&lt;/p&gt; &lt;p&gt;For a production installation, you need to follow the OpenShift and cloud-vendor specific documentation. If you want to try OpenShift on the public cloud without installing it yourself, you can create a free account at &lt;a href="https://manage.openshift.com/"&gt;OpenShift Online&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;Once you have your OpenShift instance running, deploying an application can be done via the OpenShift web UI (called &amp;#8216;Console&amp;#8217;) or the OpenShift cli (&lt;code&gt;oc&lt;/code&gt;). The cli comes as part of the CDK installation, you can also download it from the &lt;a href="https://github.com/openshift/origin/releases"&gt;openshift/origin GitHub project&lt;/a&gt;. To deploy the application we use the &lt;code&gt;oc new-app&lt;/code&gt; command:&lt;/p&gt; &lt;pre&gt;$ oc new-app --name=exampleapp dotnet:2.1~https://github.com/redhat-developer/s2i-dotnetcore-ex#dotnetcore-2.1 --build-env DOTNET_STARTUP_PROJECT=app&lt;/pre&gt; &lt;p&gt;This tells OpenShift to deploy a .NET Core application and name it &lt;strong&gt;exampleapp&lt;/strong&gt;. &lt;strong&gt;dotnet:2.1&lt;/strong&gt; is the name of the s2i-builder for .NET Core 2.1. &lt;strong&gt;https://github.com/redhat-developer/s2i-dotnetcore-ex&lt;/strong&gt; and &lt;strong&gt;dotnetcore-2.1&lt;/strong&gt; are the git repo and branch respectively. We set &lt;strong&gt;DOTNET_STARTUP_PROJECT&lt;/strong&gt; to tell the s2i-builder our application is in the &lt;strong&gt;app&lt;/strong&gt; directory.&lt;/p&gt; &lt;p&gt;The Console shows the status of the build and deployment:&lt;/p&gt; &lt;p&gt;&lt;img class=" alignnone size-medium wp-image-504667 " data-add-featherlight="https://developers.redhat.com/blog/wp-content/uploads/2018/06/webconsole-1024x520.png" src="https://developers.redhat.com/blog/wp-content/uploads/2018/06/webconsole.png" alt="" srcset="https://developers.redhat.com/blog/wp-content/uploads/2018/06/webconsole.png 1184w, https://developers.redhat.com/blog/wp-content/uploads/2018/06/webconsole-300x152.png 300w, https://developers.redhat.com/blog/wp-content/uploads/2018/06/webconsole-768x390.png 768w, https://developers.redhat.com/blog/wp-content/uploads/2018/06/webconsole-1024x520.png 1024w" sizes="(max-width: 1184px) 100vw, 1184px" /&gt;&lt;/p&gt; &lt;p&gt;Note that we didn&amp;#8217;t have to write a Dockerfile and use it to build an image locally. OpenShift fetched our sources from git and built them in a contained, controlled environment!&lt;/p&gt; &lt;p&gt;When new service releases of .NET Core become available, the application will automatically be rebuilt and redeployed to use the latest patch version. To enable a CI/CD workflow, OpenShift can be configured to rebuild and redeploy on source branch changes as well.&lt;/p&gt; &lt;p&gt;&lt;strong&gt;Conclusion&lt;/strong&gt;&lt;/p&gt; &lt;p&gt;In this blog post, we&amp;#8217;ve looked at the differences between Kubernetes and OpenShift. We&amp;#8217;ve also looked at how OpenShift supports .NET Core.&lt;br /&gt; The &lt;a href="https://access.redhat.com/documentation/en-us/net_core/2.1/html/getting_started_guide/index"&gt;.NET Core Getting Started Guide&lt;/a&gt; has more info about running .NET Core on RHEL and OpenShift. OpenShift documentation is available at &lt;a href="https://docs.openshift.com/"&gt;https://docs.openshift.com/&lt;/a&gt;.&lt;/p&gt; &lt;p&gt;&lt;a class="a2a_button_facebook" href="https://www.addtoany.com/add_to/facebook?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F05%2Fdeploy-dotnet-core-apps-openshift%2F&amp;#38;linkname=Using%20OpenShift%20to%20deploy%20.NET%20Core%20applications" title="Facebook" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_twitter" href="https://www.addtoany.com/add_to/twitter?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F05%2Fdeploy-dotnet-core-apps-openshift%2F&amp;#38;linkname=Using%20OpenShift%20to%20deploy%20.NET%20Core%20applications" title="Twitter" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_google_plus" href="https://www.addtoany.com/add_to/google_plus?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F05%2Fdeploy-dotnet-core-apps-openshift%2F&amp;#38;linkname=Using%20OpenShift%20to%20deploy%20.NET%20Core%20applications" title="Google+" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_linkedin" href="https://www.addtoany.com/add_to/linkedin?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F05%2Fdeploy-dotnet-core-apps-openshift%2F&amp;#38;linkname=Using%20OpenShift%20to%20deploy%20.NET%20Core%20applications" title="LinkedIn" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_email" href="https://www.addtoany.com/add_to/email?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F05%2Fdeploy-dotnet-core-apps-openshift%2F&amp;#38;linkname=Using%20OpenShift%20to%20deploy%20.NET%20Core%20applications" title="Email" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_print" href="https://www.addtoany.com/add_to/print?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F05%2Fdeploy-dotnet-core-apps-openshift%2F&amp;#38;linkname=Using%20OpenShift%20to%20deploy%20.NET%20Core%20applications" title="Print" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_reddit" href="https://www.addtoany.com/add_to/reddit?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F05%2Fdeploy-dotnet-core-apps-openshift%2F&amp;#38;linkname=Using%20OpenShift%20to%20deploy%20.NET%20Core%20applications" title="Reddit" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_button_flipboard" href="https://www.addtoany.com/add_to/flipboard?linkurl=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F05%2Fdeploy-dotnet-core-apps-openshift%2F&amp;#38;linkname=Using%20OpenShift%20to%20deploy%20.NET%20Core%20applications" title="Flipboard" rel="nofollow noopener" target="_blank"&gt;&lt;/a&gt;&lt;a class="a2a_dd addtoany_share_save addtoany_share" href="https://www.addtoany.com/share#url=https%3A%2F%2Fdevelopers.redhat.com%2Fblog%2F2018%2F07%2F05%2Fdeploy-dotnet-core-apps-openshift%2F&amp;#38;title=Using%20OpenShift%20to%20deploy%20.NET%20Core%20applications" data-a2a-url="https://developers.redhat.com/blog/2018/07/05/deploy-dotnet-core-apps-openshift/" data-a2a-title="Using OpenShift to deploy .NET Core applications"&gt;&lt;img src="https://static.addtoany.com/buttons/favicon.png" alt="Share"&gt;&lt;/a&gt;&lt;/p&gt;&lt;p&gt;The post &lt;a rel="nofollow" href="https://developers.redhat.com/blog/2018/07/05/deploy-dotnet-core-apps-openshift/"&gt;Using OpenShift to deploy .NET Core applications&lt;/a&gt; appeared first on &lt;a rel="nofollow" href="https://developers.redhat.com/blog"&gt;RHD Blog&lt;/a&gt;.&lt;/p&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/zR0uacmeKRY" height="1" width="1" alt=""/&gt;</content><summary>Containers are the new way of deploying applications. They provide an efficient mechanism to deploy self-contained applications in a portable way across clouds and OS distributions. In this blog post we’ll look at what OpenShift brings for .NET Core specifically. Kubernetes and OpenShift Kubernetes is the de facto orchestrator for managing containerized applications. Google open-sourced Kubernetes...</summary><dc:creator>Tom Deseyn</dc:creator><dc:date>2018-07-05T17:15:29Z</dc:date><feedburner:origLink>https://developers.redhat.com/blog/2018/07/05/deploy-dotnet-core-apps-openshift/</feedburner:origLink></entry><entry><title>3 Pitfalls Everyone Should Avoid with Hybrid Multicloud (Part 3)</title><link rel="alternate" href="http://feedproxy.google.com/~r/jbossbuzz/~3/bl66NxNce2Y/3-pitfalls-everyone-should-avoid-with-hybrid-multicloud-part-3.html" /><category term="AppDev" scheme="searchisko:content:tags" /><category term="cloud" scheme="searchisko:content:tags" /><category term="Cloud Suite" scheme="searchisko:content:tags" /><category term="Containers" scheme="searchisko:content:tags" /><category term="feed_group_name_global" scheme="searchisko:content:tags" /><category term="feed_name_ericschabell" scheme="searchisko:content:tags" /><category term="JBoss" scheme="searchisko:content:tags" /><category term="openshift" scheme="searchisko:content:tags" /><author><name>Eric D. Schabell</name></author><id>searchisko:content:id:jbossorg_blog-3_pitfalls_everyone_should_avoid_with_hybrid_multicloud_part_3</id><updated>2018-07-05T08:41:10Z</updated><published>2018-07-05T05:00:00Z</published><content type="html">&lt;div dir="ltr" style="text-align: left;" trbidi="on"&gt;&lt;a href="https://4.bp.blogspot.com/-uX_LEfg-y0Q/WqwSisY0z4I/AAAAAAAAsD4/YhckJvQSEhM3jgyy_zPAe0cUKsJh84-7QCLcBGAs/s1600/pitfalls.png" imageanchor="1" style="clear: left; float: left; margin-bottom: 1em; margin-right: 1em;"&gt;&lt;img alt="three pitfalls" border="0" data-original-height="250" data-original-width="283" height="175" src="https://4.bp.blogspot.com/-uX_LEfg-y0Q/WqwSisY0z4I/AAAAAAAAsD4/YhckJvQSEhM3jgyy_zPAe0cUKsJh84-7QCLcBGAs/s200/pitfalls.png" title="" width="200" /&gt;&lt;/a&gt;&lt;br /&gt;The daily cloud hype is all around you, yet there are three pitfalls everyone should avoid.&lt;br /&gt;&lt;br /&gt;From cloud, hybrid cloud, to hybrid multicloud, you’re told this is the way to ensure a digital future for your business. These choices you’ve got to make don’t preclude the daily work of enhancing your customer's experience and agile delivery of those applications.&lt;br /&gt;&lt;br /&gt;Let's take a journey, looking closely at what hybrid multicloud means for your business. Let's examine the decisions being made when delivering applications and dealing with legacy applications. Likely these are some of the most important resources to your business.&lt;br /&gt;&lt;br /&gt;This article highlights three pitfalls everyone should be aware of when transitioning into hybrid multicloud environments. It's based on experiences from interactions with organizations working to conquer hybrid multicloud while delivering their solutions.&lt;br /&gt;&lt;br /&gt;&lt;a href="http://www.schabell.org/2018/03/3-pitfalls-everyone-should-avoid-with-hybrid-multicloud-part-1.html" target="_blank"&gt;In part one&lt;/a&gt;, we covered the basic definitions to level the playing field. We outlined our views on hybrid cloud and multicloud, making sure to show the dividing lines between the two. This set the stage &lt;a href="http://www.schabell.org/2018/06/3-pitfalls-everyone-should-avoid-with-hybrid-multicloud-part-2.html#more" target="_blank"&gt;for part two&lt;/a&gt;, where the first pitfall discussed why cost is not always the obvious motivator for moving in to the cloud.&lt;br /&gt;&lt;br /&gt;In part three, it's time for technology and looking at the question of whether it's a good plan moving all workloads in to the cloud?&lt;br /&gt;&lt;a name='more'&gt;&lt;/a&gt;&lt;br /&gt;&lt;h3 style="text-align: left;"&gt;Everything better in the cloud&lt;/h3&gt;&lt;a href="https://4.bp.blogspot.com/-bP76TrXvIAk/WzzaZ8lFF-I/AAAAAAAAs3k/nHzj4e5eXEwVbec5_jwhXdkyeZ20UfouQCLcBGAs/s1600/Screen%2BShot%2B2018-07-04%2Bat%2B16.31.46.png" imageanchor="1" style="clear: right; float: right; margin-bottom: 1em; margin-left: 1em;"&gt;&lt;img alt="three pitfalls" border="0" data-original-height="206" data-original-width="368" height="177" src="https://4.bp.blogspot.com/-bP76TrXvIAk/WzzaZ8lFF-I/AAAAAAAAs3k/nHzj4e5eXEwVbec5_jwhXdkyeZ20UfouQCLcBGAs/s320/Screen%2BShot%2B2018-07-04%2Bat%2B16.31.46.png" title="" width="320" /&gt;&lt;/a&gt;The second pitfall is about the misconception that everything will benefit from running in the cloud. All workloads are not equal and not all workloads moving in to the cloud result in a measurable effect on the bottom line.&lt;br /&gt;&lt;br /&gt;A &lt;a href="https://www.informationweek.com/cloud/10-cloud-migration-mistakes-to-avoid" target="_blank"&gt;recent article stated&lt;/a&gt;, "Not all business applications should migrate to the cloud, and enterprises must determine which apps are best suited to a cloud environment." A hard fact that the utility company mentioned in &lt;a href="http://www.schabell.org/2018/06/3-pitfalls-everyone-should-avoid-with-hybrid-multicloud-part-2.html" target="_blank"&gt;part two of this series&lt;/a&gt; found out as labor cost estimations rose while trying to move applications in to the cloud.&lt;br /&gt;&lt;br /&gt;Discovering this was not a viable solution, the utility company backed up and re-evaluated their applications. Turns out, some application were not heavily used, others had data ownership and compliance issues. Some of their applications were not certified for use in a cloud environment.&lt;br /&gt;&lt;br /&gt;Sometimes it's not physically possible to run applications in the cloud, but other times it's not financially viable to run in the cloud.&lt;br /&gt;&lt;br /&gt;Imagine a fictive online travel company. As their business grew, they expanded their hosting capacity on-premise eventually to over 40 thousand servers. It became a question of expanding their resources by purchasing a datacenter at a time, not a rack at a time. Their business consumes bandwidth at such volumes that cloud pricing models, based on bandwidth usage, remains prohibitive.&lt;br /&gt;&lt;br /&gt;&lt;h3 style="text-align: left;"&gt;Why a baseline&lt;/h3&gt;Nothing is more important than having a thorough understanding of your application landscape, as the examples above show. Along with a good understanding what applications need to migrate to the cloud, you also need to understand current IT environments, present level of resources, and estimate costs for moving.&lt;br /&gt;&lt;br /&gt;The current situation and performance requirements (network, storage, cpu, memory, application &amp;amp; infrastructure behavior under load, etc), called a baseline, gives you the tools to make the right decision.&lt;br /&gt;&lt;br /&gt;If you’re running servers with single digit CPU utilization due complex acquisition processes, then a cloud might be a great idea with on demand resourcing. However, first ask these questions:&lt;br /&gt;&lt;br /&gt;&lt;ul style="text-align: left;"&gt;&lt;li&gt;How long did this low utilization exist?&amp;nbsp;&lt;/li&gt;&lt;li&gt;Why wasn’t it caught earlier?&amp;nbsp;&lt;/li&gt;&lt;li&gt;Isn’t there a process or effective monitoring in place?&amp;nbsp;&lt;/li&gt;&lt;li&gt;Do you really need a cloud to fix this, or just a better process for both getting resources and managing said resources?&amp;nbsp;&lt;/li&gt;&lt;li&gt;Will you have a better process in the cloud?&lt;/li&gt;&lt;/ul&gt;&lt;div&gt;&lt;br /&gt;&lt;/div&gt;&lt;br /&gt;&lt;div&gt;&lt;h3 style="text-align: left;"&gt;Container necessity&lt;/h3&gt;&lt;/div&gt;Many believe that you need containers to be successful in the cloud. The famous &lt;a href="https://speakerdeck.com/caseywest/containercon-north-america-cloud-anti-patterns" target="_blank"&gt;catch phrase&lt;/a&gt;&amp;nbsp;sums it up nicely, "We crammed this monolith into a container and called it a microservice."&lt;br /&gt;&lt;br /&gt;&lt;a href="https://4.bp.blogspot.com/-28RZcPUcB-I/WzzaqFASwlI/AAAAAAAAs3s/QoAp57iReo8bmhynb4OWqIpjG-_IqD-fQCLcBGAs/s1600/Screen%2BShot%2B2018-07-04%2Bat%2B16.32.41.png" imageanchor="1" style="clear: right; float: right; margin-bottom: 1em; margin-left: 1em;"&gt;&lt;img alt="three pitfalls" border="0" data-original-height="349" data-original-width="762" height="145" src="https://4.bp.blogspot.com/-28RZcPUcB-I/WzzaqFASwlI/AAAAAAAAs3s/QoAp57iReo8bmhynb4OWqIpjG-_IqD-fQCLcBGAs/s320/Screen%2BShot%2B2018-07-04%2Bat%2B16.32.41.png" title="" width="320" /&gt;&lt;/a&gt;Containers are a means to an end, and using containers doesn’t mean your organization is capable of running maturely in the cloud. It's not about the technology involved, it's about applications that often were written in days gone by using dated technology. If you put a tire fire into a container and then put that container on a container platform (ship), it's still functionality that someone is using.&lt;br /&gt;&lt;br /&gt;Is that fire now easier to extinguish? These container fires just create more challenges for your DevOps teams, who are already struggling to keep up with all the changes being pushed through an organization moving everything into the cloud.&lt;br /&gt;&lt;br /&gt;Note, it’s not a default bad decision to move legacy workloads into the cloud, nor is it a bad idea to containerize them. It’s about weighing the benefits, the downside, assessing the options available and making the right choices for each of your workloads.&lt;br /&gt;&lt;br /&gt;&lt;h3 style="text-align: left;"&gt;Pitfalls everyone should avoid&lt;/h3&gt;In part four of this series, the third and final pitfall is presented. A pitfall that everyone should avoid with hybrid multicloud. Find out what the cloud means for your data.&lt;br /&gt;&lt;br /&gt;Missing the start of this series? Just head on back and &lt;a href="http://www.schabell.org/2018/03/3-pitfalls-everyone-should-avoid-with-hybrid-multicloud-part-1.html" target="_blank"&gt;catch up with part 1&lt;/a&gt;.&lt;/div&gt;&lt;div class="feedflare"&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=1SxkCue2P5w:8PXyNxkhM-g:yIl2AUoC8zA"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=yIl2AUoC8zA" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=1SxkCue2P5w:8PXyNxkhM-g:63t7Ie-LG7Y"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=63t7Ie-LG7Y" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=1SxkCue2P5w:8PXyNxkhM-g:4cEx4HpKnUU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=1SxkCue2P5w:8PXyNxkhM-g:4cEx4HpKnUU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=1SxkCue2P5w:8PXyNxkhM-g:F7zBnMyn0Lo"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=1SxkCue2P5w:8PXyNxkhM-g:F7zBnMyn0Lo" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=1SxkCue2P5w:8PXyNxkhM-g:V_sGLiPBpWU"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=1SxkCue2P5w:8PXyNxkhM-g:V_sGLiPBpWU" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=1SxkCue2P5w:8PXyNxkhM-g:qj6IDK7rITs"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?d=qj6IDK7rITs" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;a href="http://feeds.feedburner.com/~ff/schabell/jboss?a=1SxkCue2P5w:8PXyNxkhM-g:gIN9vFwOqvQ"&gt;&lt;img src="http://feeds.feedburner.com/~ff/schabell/jboss?i=1SxkCue2P5w:8PXyNxkhM-g:gIN9vFwOqvQ" border="0"&gt;&lt;/img&gt;&lt;/a&gt; &lt;/div&gt;&lt;img src="http://feeds.feedburner.com/~r/schabell/jboss/~4/1SxkCue2P5w" height="1" width="1" alt=""/&gt;&lt;img src="http://feeds.feedburner.com/~r/jbossbuzz/~4/bl66NxNce2Y" height="1" width="1" alt=""/&gt;</content><summary>The daily cloud hype is all around you, yet there are three pitfalls everyone should avoid. From cloud, hybrid cloud, to hybrid multicloud, you’re told this is the way to ensure a digital future for your business. These choices you’ve got to make don’t preclude the daily work of enhancing your customer's experience and agile delivery of those applications. Let's take a journey, looking closely at ...</summary><dc:creator>Eric D. Schabell</dc:creator><dc:date>2018-07-05T05:00:00Z</dc:date><feedburner:origLink>http://feedproxy.google.com/~r/schabell/jboss/~3/1SxkCue2P5w/3-pitfalls-everyone-should-avoid-with-hybrid-multicloud-part-3.html</feedburner:origLink></entry></feed>
